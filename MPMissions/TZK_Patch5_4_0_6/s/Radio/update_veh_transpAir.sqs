; args: [vehicle]
_vehicle = _this select 0

_booleStringTransport = "_vehicle in TransportActivatedVehicles"; _booleTransport = call _booleStringTransport
_booleStringSpoofON = "bSpoofMissile && ""_x=={SpoofSwitch_xj400}"" count magazines _vehicle > 0"; _booleSpoofON = call _booleStringSpoofON
_booleStringSpoofOFF = """_x=={SpoofSwitch_xj400}"" count magazines _vehicle == 0 && count magazines _vehicle > 0"; _booleSpoofOFF = call _booleStringSpoofOFF

; enableSweep a special parameter only used in UH60MG. The use is unknown. Only Helicopters have such a parameter so must exclude plane first.
? "Helicopter" countType [_vehicle] > 0 : _hasGunner = (typeOf _vehicle GetVehicleParam "enableSweep") in ["0", "false"]
? _hasGunner : _booleStringSwitchDriver = "abs(speed _vehicle) < 50 && player == gunner _vehicle && (isNull driver _vehicle || local driver _vehicle) && local _vehicle"; _booleSwitchDriver = call _booleStringSwitchDriver
? _hasGunner : _booleStringSwitchGunner = "abs(speed _vehicle) < 50 && player == driver _vehicle && (isNull gunner _vehicle || local gunner _vehicle) && local _vehicle"; _booleSwitchGunner = call _booleStringSwitchGunner

if (_booleSpoofON) then {Radio001 setTriggerText (TzkInGameText select 025 select 19); Radio001 setTriggerStatements ["this", "vehicle player removeMagazines {SpoofSwitch_xj400}; if !(boole_Refresh_Radio) then {boole_Refresh_Radio = true}", ""]};
if (_booleSpoofOFF) then {Radio001 setTriggerText (TzkInGameText select 025 select 20); Radio001 setTriggerStatements ["this", "vehicle player addMagazine {SpoofSwitch_xj400}; if !(boole_Refresh_Radio) then {boole_Refresh_Radio = true}", ""]};

call preprocessFile "Util\radio2.sqf";
if (call _booleStringSwitchDriver) then {Radio003 setTriggerText (TzkInGameText select 025 select 12); Radio003 setTriggerStatements ["this", {(vehicle player) exec (TzkScripts select 130)}, ""]} else {Radio003 setTriggerText " "; Radio003 setTriggerStatements ["this", "", ""]};
if (call _booleStringSwitchGunner) then {Radio004 setTriggerText (TzkInGameText select 025 select 13); Radio004 setTriggerStatements ["this", {(vehicle player) exec (TzkScripts select 131)}, ""]} else {Radio004 setTriggerText " "; Radio004 setTriggerStatements ["this", "", ""]};
? "Plane" countType [_vehicle] == 0 && call (typeOf _vehicle GetVehicleParam "transportSoldier") > 8: Radio005 setTriggerText "Attach/Detach Center Vehicle"; Radio005 setTriggerStatements ["this", {[vehicle player, tsCenter, ttHeli] exec (TzkScripts select 074)}, ""];
Radio006 setTriggerText (TzkInGameText select 025 select 21);
Radio006 setTriggerStatements ["this", {[vehicle player, player] exec "\TZK_Scripts_4_0_4\Player\Action\PlaneFlyingStatus.sqs"}, ""];
Radio007 setTriggerText (TzkInGameText select 025 select 22);
Radio007 setTriggerStatements ["this", {[vehicle player, siPlayer] exec (TzkScripts select 080)}, ""];
Radio008 setTriggerText (TzkInGameText select 025 select 14);
Radio008 setTriggerStatements ["this", {[vehicle player, siPlayer] exec (TzkScripts select 078)}, ""];
Radio009 setTriggerText (TzkInGameText select 025 select 15);
Radio009 setTriggerStatements ["this", {[vehicle player, siPlayer] exec (TzkScripts select 079)}, ""];
if (call _booleStringTransport) then {	Radio000 setTriggerText (TzkInGameText select 025 select 16); Radio000 setTriggerStatements ["this", {[vehicle player] exec (TzkScripts select 176)}, ""];	} else {	Radio000 setTriggerText (TzkInGameText select 025 select 17); Radio000 setTriggerStatements ["this", {[vehicle player] exec (TzkScripts select 175)}, ""];	};


~1
#Refresh
~0.05
; In OFP/Arma can't compare booleans directly. Use (A && !B) || (!A && B) here, and use !_boolean to refresh.

_booleRefreshTransport = (_booleTransport && !(call _booleStringTransport)) || (!_booleTransport && (call _booleStringTransport))
? _booleRefreshTransport : if (call _booleStringTransport) then {	Radio000 setTriggerText (TzkInGameText select 025 select 16); Radio000 setTriggerStatements ["this", {[vehicle player] exec (TzkScripts select 176)}, ""];	} else {	Radio000 setTriggerText (TzkInGameText select 025 select 17); Radio000 setTriggerStatements ["this", {[vehicle player] exec (TzkScripts select 175)}, ""];	}

? call _booleStringSpoofON : Radio001 setTriggerText (TzkInGameText select 025 select 19); Radio001 setTriggerStatements ["this", "vehicle player removeMagazines {SpoofSwitch_xj400}; if !(boole_Refresh_Radio) then {boole_Refresh_Radio = true}", ""]
? call _booleStringSpoofOFF : Radio001 setTriggerText (TzkInGameText select 025 select 20); Radio001 setTriggerStatements ["this", "vehicle player addMagazine {SpoofSwitch_xj400}; if !(boole_Refresh_Radio) then {boole_Refresh_Radio = true}", ""]

? _booleRefreshTransport : _booleTransport = call _booleStringTransport

_booleRefreshSwitchDriver = (_booleSwitchDriver && !(call _booleStringSwitchDriver)) || (!_booleSwitchDriver && (call _booleStringSwitchDriver))
_booleRefreshSwitchGunner = (_booleSwitchGunner && !(call _booleStringSwitchGunner)) || (!_booleSwitchGunner && (call _booleStringSwitchGunner))
? _booleRefreshSwitchDriver : if (call _booleStringSwitchDriver) then {Radio003 setTriggerText (TzkInGameText select 025 select 12); Radio003 setTriggerStatements ["this", {(vehicle player) exec (TzkScripts select 130)}, ""]} else {Radio003 setTriggerText " "; Radio003 setTriggerStatements ["this", "", ""]}
? _booleRefreshSwitchGunner : if (call _booleStringSwitchGunner) then {Radio004 setTriggerText (TzkInGameText select 025 select 13); Radio004 setTriggerStatements ["this", {(vehicle player) exec (TzkScripts select 131)}, ""]} else {Radio004 setTriggerText " "; Radio004 setTriggerStatements ["this", "", ""]}

? _booleRefreshSwitchDriver : _booleSwitchDriver = call _booleStringSwitchDriver
? _booleRefreshSwitchGunner : _booleSwitchGunner = call _booleStringSwitchGunner

_timeRefresh = time + 1
@(time > _timeRefresh || boole_Refresh_Radio)
? boole_Refresh_Radio : boole_Refresh_Radio = false
? _vehicle == vehicle player : goto "Refresh"

~1
? "ParachuteBase" countType [vehicle player] > 0 : [_vehicle] call loadFile (TzkScripts select 198); exit
; EOF