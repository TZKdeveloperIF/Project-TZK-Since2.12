; args: [unit, marker, target, structure type, dispersion, (bigger angle)]

_unit = _this select 0
_marker = _this select 1
_target = _this select 2
_type = _this select 3; _dispersion = _this select 4; _biggerAngle = (if (count _this > 5) Then {_this select 5} Else {0})

_si = siPlayer; _uid = [_unit, _si, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "\TZK_Scripts_4_0_4\Player\Order\New.sqs"

_vehicle = vehicle _unit; _typeName = typeOf _vehicle; _actualTarget = typeOf _target camCreate getPosASL _target; _actualTarget exec "\TZK_Scripts_4_0_4\Common\Command\allowDamageFalse.sqs"; _script = "Common\EH\Fired_ReviseShellDir.sqs"
? _biggerAngle > 0: _heliH = typeOf _target camCreate [0,0,0]; _script = "Common\EH\Fired_ReviseShell_BigAngle.sqs"
? !(_unit in PlayerShootingUnits): PlayerShootingUnits set [_uid, _unit]

_groups = (groupMatrix select siPlayer) + (townGroups select siPlayer) + (workerGroups select siPlayer) - [groupPlayer]

#CheckDistance
_posOrdered = getPos _vehicle; _distLimit = viewDistance; _hint = "Target is outside viewDistance. Order aborted."
? (upgMatrix select _si) select upgLongWeaponRange == 2 || (upgMatrix select _si) select upgLongArtRange == 2: _hint = "Since TZK_4.0.3.02 Mission, a new upgrade item ""Artillery Long Range"" is added. One must upgrade both Weapon Range and Art Range if wish to extend the range of Artillery Module. Order aborted."
? (upgMatrix select _si) select upgLongWeaponRange == 2 && (upgMatrix select _si) select upgLongArtRange == 2: _distLimit = 2*viewDistance; _hint = "Target is outside 2xviewDistance. Order aborted."
? _unit distance _target > _distLimit: _unit groupChat _hint; goto "Exit"
? _unit distance _target < _distLimit && _unit distance _target > viewDistance: _unit groupChat "Target is far. Probably missing."
#PrepareToMove
? ([getPos _unit, _posOrdered] call funcDistH) < 30: _unit doMove _posOrdered, goto "PrePareToAttack"
	_unit groupChat "Moving to attacking position."; _timeStart = time; _timeHint = _timeStart + 5*60; 
	_hint = ["I've been running for %1 minutes. Distance %2 meters now.", (_timeHint -_timeStart)/60, (_unit distance _target) - (_unit distance _target)%1]
	
#CheckPosReached
	_unit doMove _posOrdered
	~5
	? call orderCheck: goto "Exit"
	? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
	? time > _timeHint: hint format _hint; _timeHint = _timeHint + 5*60
	? ([getPos _unit, _posOrdered] call funcDistH) > 30: goto "CheckPosReached"
#PrePareToAttack
	_bAvoidStruct = 50 + _dispersion > ([getPos _target, _si] call loadFile "Common\SQF\ClosestEnemyCritcalStruct.sqf") select 1
	_unit groupChat "In position. Prepare to attack.";
	driver _vehicle action ["ENGINE OFF", _vehicle]; _vehicle engineOn false
	
	_vehicle doTarget _actualTarget
	; Prepare 155mm for SE TD vehicle.
	_weapon = "Gun155_xj400"
	_delay = 3
	; Delay for turning the turret. It'll be good to obtain proper value by the angle's difference, however no way to compute this in OFP.
	~_delay
	; If didn't select proper magazine for SE TD, general 120m/s magazine will be equipped.
	? !(_vehicle hasWeapon _weapon): _magazinesArray = magazinesArray _vehicle; _i = 0; _c = count _magazinesArray; _ammunition = 0; while "_i < _c" do {if ("DKMM_Gun155HE" == _magazinesArray select _i) then {_ammunition = _ammunition + (_magazinesArray select _i + 1)}; _i = _i + 2}; _vehicle addWeapon _weapon, _vehicle addMagazinePrecise ["HE155_0120_xj400", _ammunition], _vehicle removeMagazines "DKMM_Gun155HE", _vehicle removeWeapon "Gun155"
	
	
	_weapons = (weapons _vehicle) - [_weapon]; {_vehicle removeWeapon _x} forEach _weapons; {_vehicle addWeapon _x} forEach _weapons
	_reloadMagazine = false; _targetSpotted = false; _timeReveal = _time + 60; _timeCheckKA = _time + 60 + random 60; _remoteKA = [_target, _groups] call loadFile "Common\Art\BiggestKnowsAbout.sqf"
	_ammunition = -1
	; The applying of "_ammunition" will invalid magazines containing only 1 shot. If wish to use such a magazine, adjust this script manually.
	#AttackCheck
		_posTarget = [getPos _target, 0, _dispersion] call funcGetRandomPos
		? _bAvoidStruct && _type in typesHowitzer: if (50 > ([_posTarget, _si] call loadFile "Common\SQF\ClosestEnemyCritcalStruct.sqf") select 1) Then {goto "SwitchTargetSleep"}
		_posTarget set [2,0]; _actualTarget setPos _posTarget
		
		? _unit distance _target > _distLimit: goto "CheckDistance"
		? _biggerAngle > 0: _posH = [_posTarget, getPos _vehicle] call funcVectorSub, _posH set [2,1], _length = _posH call funcVectorLength, _posH = [_posH, 600/_length] call funcVectorScale, _posH set [2, 6*173.2], _posH = [_posH, getPos _vehicle] call funcVectorAdd, _heliH setPos _posH, _vehicle reveal _heliH
		; ? bool_TZK_199_Mode: goto "Mode199"
		
		? _vehicle ammo _weapon == 0: _magazines = _vehicle call funcGetNotEmptyMags; _validMags = [_weapon] call funcWeaponValidMags; if ("_x in _validMags" count _magazines == 0) Then {goto "CheckRearm"};
		? _time > _timeReveal: _timeReveal = _time + 60*2, _vehicle reveal _actualTarget
		? _time > _timeCheckKA: _timeCheckKA = _time + 60*2, _remoteKA = [_target, _groups] call loadFile "Common\Art\BiggestKnowsAbout.sqf"
		~0.1
		if (_biggerAngle > 0) Then "_vehicle doTarget _heliH" Else "_vehicle doTarget _actualTarget"
		
		; delay must be correctly assigned for "fire" command.
		_ammoArray = _vehicle ammoArray _weapon
		? count _ammoArray > 0: _delay = call format ["%1", (_ammoArray select 0) GetWeaponParam "reloadTime"]*1.2 + 1
		? count _ammoArray == 0: _validMags = [_weapon] call funcWeaponValidMags; _delay = call format ["%1", (_validMags select 0) GetWeaponParam "reloadTime"] + 1
		
		? _reloadMagazine: _delay = call format ["%1", _weapon GetWeaponParam "magazineReloadTime"] + _delay; _reloadMagazine = false
		~_delay
		? call orderCheck: goto "Exit"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
		_ammoArray = _vehicle ammoArray _weapon
		
		; use "knowsAbout" to limit SE TD vehicle shooting
		_localKA = _vehicle knowsAbout _actualTarget; _KA = _localKA;
		? _KA < 3.5: _KA = _remoteKA
		? _KA < 3.5: if !_targetSpotted Then {_vehicle groupChat format ["Can not fire, the target is not spotted. Current knowsAbout: %1, friendly groups' biggest knowsAbout: %2, desired knowsAbout: 3.5.", _localKA, _remoteKA]} Else {_vehicle groupChat format ["Firing ceased, the target is lost. Current knowsAbout: %1, friendly groups' biggest knowsAbout: %2, desired knowsAbout: 3.5.", _localKA, _remoteKA], _targetSpotted = false}, goto "AttackCheck"
		_targetSpotted = true
		
		? count _ammoArray > 0: if (_ammoArray select 1 == 1) Then {_reloadMagazine = true}; if (_ammoArray select 1 > 0) Then {if ((_ammoArray select 1 != _ammunition) || (_ammoArray select 1 == 1)) Then {_ammunition = _ammoArray select 1; if bool_TZK_Art_RK4 Then {_ehRev = _vehicle addEventHandler ["Fired",""], _vehicle removeEventHandler ["Fired", _ehRev], _vehicle addEventHandler [ "Fired", format [{[_this, %1, %2] exec "%3"}, getPosASL _actualTarget, _ehRev, _script] ]}, _vehicle fire _weapon}} else {_unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "Exit"}
		? count _ammoArray == 0: _unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "Exit"
		
		~0.1
		if (_biggerAngle > 0) Then "_vehicle doWatch _posH" Else "_vehicle doWatch (getPos _actualTarget)"
	goto "AttackCheck"
#SwitchTargetSleep
	~4+random 2
	goto "AttackCheck";
#CheckRearm
	_vs = [getPos _unit, 1500, (typesSupport select si0) + (typesSupport select si1) + [(typesMHQ select _si)], []] call funcGetNearbyVehicles
	? count _vs == 0: _unit groupChat "No support vehicle within 1500 meters. Magazines exhausted. Order aborted."; goto "Exit"
	_distMin = 1500; _sup = objNull
	{ _dist = _unit distance (_x select 0); if (_dist < _distMin) Then { _sup = (_x select 0); _distMin = _dist } } foreach _vs
	? isNull _sup: _unit groupChat "No support vehicle near. Magazines exhausted. Order aborted."; goto "Exit"
	_unit groupChat "Moving to support vehicle for more magazines."

	_timeAbort = time + 15*60
	
	#MoveToSupport
		_posMove = [[0,25], (getDir _sup)] call funcVectorRot2D
		_posMove = [getPos _sup, _posMove] call funcVectorSub
		_unit doMove _posMove
		~5
		? call orderCheck: goto "Exit"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
		? !(alive _sup): goto "CheckRearm"
		? time > _timeAbort: _unit groupChat "Cost too much time. Unable to reach support vehicle. Order aborted."; goto "Exit"
		? (_unit distance _sup) > 30: goto "MoveToSupport"
	_speed = -1; _mag = "";
	? !bool_TZK_199_Mode: _magazines = magazines _vehicle; _validMags = [_weapon] call funcWeaponValidMags; {if (_x in _validMags) Then {_mag = _x}} forEach _magazines
	? _mag != "": _speed = substr [_mag, sizeofstr(_mag) - sizeofstr("xxxx_xj400"), sizeofstr(_mag) - sizeofstr("_xj400")]; if !(substr [_speed, 0, 1] in ["0","1","2","3"]) then {_speed = -1} else {_speed = call _speed};
	_delay = [0,3] select (_speed > 0)
	_unit groupChat "Rearming at support vehicle. If I'm far away from you, probably I can't receive supplemented magazines. In this case, please use Unit Camera and look at me."; [_unit, _sup] exec "Player\Rearm.sqs"; doStop _unit; removeAllWeapons _vehicle
	#WaitRearmComplete
		~5
		? call orderCheck: goto "Exit"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
		? !someAmmo _vehicle: goto "WaitRearmComplete"
	~_delay + 1
	? _speed <= 0: goto "PrepareToMove"
	_delay = 1; [_vehicle, _speed] exec "Extra\SwitchSEMagPreset.sqs"; _unit groupChat "Switching magazine. Again, if I'm far away, use Unit Camera and look at me."
	#WaitSwitchComplete
		~_delay
		? call orderCheck : goto "Exit"
		? !(alive _unit) || _vehicle != vehicle _unit : goto "Exit"
		_delay = 5
		? !someAmmo _vehicle: goto "WaitSwitchComplete"
	goto "PrepareToMove"

#Exit
deleteVehicle _actualTarget; PlayerShootingUnits set [_uid, objNull]
? _biggerAngle > 0: deleteVehicle _heliH
exit