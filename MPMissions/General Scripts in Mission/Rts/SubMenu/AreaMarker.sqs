; args: [server market or not, marker type]
_toServer = _this select 0
_markerType = _this select 1

@ !mutexDlg
mutexDlg = true; dlgID = dlgID + 1; _dlgID = dlgID
_dlg = createDialog "TzkRtsSubMenuOneListWide"
mutexDlg = false

_size = getMarkerSize "TzkRtsArea"

_idcTitle = IDC + 0; _idcListLabel = IDC + 16 * 3 + 1; _idcListBox0 = IDC + 16 * 3 + 0

_webType = "Server"; _webShort = "Svr"
? not _toServer: _webType = "Player", _webShort = "Ppl"
_cachedIdxName = format ["RtsArea%1%2Idx", _markerType, _webShort]

_enum = _markerType call preprocessFile "Rts\Marker\EnumOfType.sqf"
? _enum < 0: showDebug [format ["Invalid %1 marker type.", _markerType], 5000], exit
_cnt = count (TzkPplRtsAreaInfo select _enum)
_updateList = preprocessFile "Rts\SubMenu\UpdateAreaListbox.sqf"

ctrlSetText [_idcTitle, format ["%4 %1 %2 %3", _webType, _markerType, localize {TZK_LANG_AREA}, localize {TZK_LANG_EDIT}]]
ctrlSetText [_idcListLabel, localize {TZK_LANG_AREA}]
ctrlSetText [IDC + 1, format ["%1 %2", localize {TZK_LANG_SET}, localize {TZK_LANG_AREA}]]
ctrlSetText [IDC + 2, localize {TZK_LANG_CLEAR}]
ctrlSetText [IDC + 3, format ["%1 %2", localize {TZK_LANG_SET}, localize {TZK_LANG_LINE}]]

[_idcListBox0, _markerType, _webShort, _cnt] call _updateList
? -1 != (call _cachedIdxName): lbSetCurSel [_idcListBox0, (call _cachedIdxName)]

btnValue00 = false; btnValue01 = false; btnValue02 = false

_tooLargeHint = format ["Marker too large. Can't be set as %1 area.", _markerType]
? _size select 0 > 200 || _size select 1 > 200: hint _tooLargeHint

# loop
	~ 0.2
	; ctrlShow [IDC_DialogBG_CR, !bool_TZK_DarkSkin]; ctrlShow [IDC_DialogBG_Light, bool_TZK_DarkSkin]
	? call dlgUpdated: goto "Quit"
	? not alive player: closeDialog 0; goto "Quit"

	[_idcListBox0, _markerType, _webShort, _cnt] call _updateList

	? btnValue00: btnValue00 = false; closeDialog 0; goto "Quit"
	? btnValue01: btnValue01 = false; goto "Set"
	? btnValue02: btnValue02 = false; goto "Clear"
	? btnValue03: btnValue03 = false; goto "SetByLine"

	goto "loop"
# Quit
	exit
# Set
	? -1 == lbCurSel _idcListBox0: hint "No area selected."; goto "loop"
	? _size select 0 > 200 || _size select 1 > 200: hint _tooLargeHint; goto "loop"

	[100 + lbCurSel _idcListBox0, _markerType, _toServer, _cachedIdxName] call preprocessFile "Rts\Marker\GenArea.sqf"
	; Clear selected area on setting marker
	false call preprocessFile (TzkScripts select 361)
	false call preprocessFile (TzkScripts select 362)
	closeDialog 0; goto "Quit"
# Clear
	? -1 == lbCurSel _idcListBox0: hint "No area selected."; goto "loop"
	[lbCurSel _idcListBox0, _markerType, _toServer, _cachedIdxName] call preprocessFile "Rts\Marker\GenArea.sqf"; goto "loop"
# SetByLine
	? -1 == lbCurSel _idcListBox0: hint "No area selected."; goto "loop"
	? _size select 0 > 200 || _size select 1 > 200: hint _tooLargeHint; goto "loop"

	; treat the "line" as desired "area"
	_w = (getMarkerSize "TzkRtsArea") select 0; _h = (getMarkerSize "TzkRtsArea") select 1
	_len = sqrt(_w * _w + _h * _h)
	; the "line" area has 3 meters height
	_extraArg = [getMarkerPos "TzkRtsArea", [_len, 3], TzkDiagDir]

	[100 + lbCurSel _idcListBox0, _markerType, _toServer, _cachedIdxName, _extraArg] call preprocessFile "Rts\Marker\GenArea.sqf"
	; Clear selected area on setting marker
	false call preprocessFile (TzkScripts select 361)
	false call preprocessFile (TzkScripts select 362)
	closeDialog 0; goto "Quit"