; args: none
; read position info from "TzkRtsAreadiagonal" marker

_markerPos = markerPos "TzkRtsAreadiagonal"; _markerPos resize 2
_markerDir = getMarkerDir "TzkRtsAreadiagonal"
_markerSize = markerSize "TzkRtsAreadiagonal"

_vec = [[_markerSize select 0, _markerSize select 1], _markerDir] call funcVectorRot2D
; _pos1 should be line start pos, created firstly by player
_pos1 = [_markerPos, _vec] call funcVectorSub
_pos2 = [_markerPos, _vec] call funcVectorAdd

_lowerBound = 70
_param = [_pos1, _pos2]
_legal = _param call preprocessFile "Bridge\LegalPos.sqf"

? _legal: goto "CanBuildBridge"
	_enum = _param select 2
	? 0 == _enum: hint localize {TZK_LANG_BRDIGE_CLOSE_TO_THE_SEA}
	? 1 == _enum: hint format ["%2 < %1 %3. %4 %5 %6.", _lowerBound, localize {TZK_LANG_DISTANCE}, localize {TZK_LANG_METER}, localize {TZK_LANG_BRIDGE}, localize {TZK_LANG_WONT}, localize {TZK_LANG_BUILT}]
	? 2 == _enum: hint localize {TZK_LANG_BRDIGE_OVER_THE_SEA}
	? 3 == _enum: hint localize {TZK_LANG_BRDIGE_NOT_IN_THE_SEA}
	? 4 == _enum: hint (TzkInGameText select 008)
	exit
# CanBuildBridge

hint "Prepare to build the bridge."

; send info to server. Server will manage bridge building and follow-up maintenance until the bridge project is destructed
_h1 = _pos1 call funcHASL, _h2 = _pos2 call funcHASL; _pos1 set [2, _h1], _pos2 set [2, _h2]
[[_pos1, _pos2], [siPlayer, _lowerBound]] exec {\TZK_Patch4_4_0_6\s\Bridge\Register2Server.sqs}
publicExec format ["%1 exec {\TZK_Patch4_4_0_6\s\Bridge\Register2Server.sqs}", [[_pos1, _pos2], [siPlayer, _lowerBound]]]
exit