; args: roof type value (e.g. st20mHeightRoof)
; read position info from "TzkRtsArea" marker

; Roof is for facing artillery or aircraft. They might be ruined partly. Area roof will check whether roof exist and not 
; destroyed. Only build at where no roof exists.

; don't support dir != 0 case. 
_markerDir = getMarkerDir "TzkRtsArea"
? _markerDir != 0: hint "Do not support rotated area."; exit

_markerPos = markerPos "TzkRtsArea"
_markerSize = markerSize "TzkRtsArea"

_w = _markerSize select 0
? _w <= 0 || _w > 500: hint "Invalid area. Roof not built.", exit
_h = _markerSize select 0
? _h <= 0 || _h > 500: hint "Invalid area. Roof not built.", exit

_stType = _this
_desc = structDefs select _stType
_limit = (_desc select sdLimit) * (if (2 == (upgMatrix select siPlayer select upgNumBuildings)) then {2} else {1})
_cost = _desc select sdCost
_radius = _desc select sdMaxRadius

_structsEntry = structMatrix select siPlayer select _stType

_skip = false; _msg = ""

_buildCD = 1

_roofHeight = structDefs select _this select ([sdObjects0, sdObjects1] select siPlayer) select 0 select 2 select 2
_roofClsName = structDefs select _this select ([sdObjects0, sdObjects1] select siPlayer) select 0 select 0

; define the step length. The roof's edge length is 10 meters
; ATTENTION: The center of each roof in this script must be tens
_step = 10
_left = (_markerPos select 0) - _w + _step / 2
_right = (_markerPos select 0) + _w - _step / 2
_top = (_markerPos select 1) - _h + _step / 2
_bottom = (_markerPos select 1) + _h - _step / 2

_correct = _left % _step
_left = _left - _correct + (if (_correct < _step / 2) then {0} else {_step})
_correct = _right % _step
_right = _right - _correct + (if (_correct < _step / 2) then {0} else {_step})
_correct = _top % _step
_top = _top - _correct + (if (_correct < _step / 2) then {0} else {_step})
_correct = _bottom % _step
_bottom = _bottom - _correct + (if (_correct < _step / 2) then {0} else {_step})

_cntX = (_right - _left) / _step; _cntY = (_bottom - _top) / _step
? _cntX < 0: _cntX = 0
? _cntY < 0: _cntY = 0

; built roof's height is different from defined value (maybe due to OFP height calc)
; thus need an object to detect the height
_localRoofObj = _roofClsName camCreate [0,0,0]

; define variables outside
_i = 0; _j = 0

_builderVehTypes = + (typesSupportPlus select siPlayer)
_builderVehTypes set [count _builderVehTypes, typesMHQ select siPlayer]
_builderVehTypes set [count _builderVehTypes, typesEngineeringVeh select siPlayer]

_cachedInfo = []

_stat = 0, _titleText = "Building " + (_desc select sdName) + "..."

# loop
	; use same mutex with obstruction
	@ not mutexBuildObstruct
		mutexBuildObstruct = true
		_ret = call preprocessFile (TzkScripts select 377)
		mutexBuildObstruct = false

	? not _ret: player groupchat _msg, goto "Quit"

	? _ret && not _skip: _stat = _stat + 1, titleText [_titleText, "PLAIN DOWN", _buildCD]
	~ (if _skip then {0} else {_buildCD})
	? _i < _cntX && _j < _cntY: goto "loop"

# Quit
	titleText ["", "PLAIN DOWN", 0]
	Player groupChat format ["Order finished. %1 '%2' were built.", _stat, _desc select sdName]
	deleteVehicle _localRoofObj
	exit