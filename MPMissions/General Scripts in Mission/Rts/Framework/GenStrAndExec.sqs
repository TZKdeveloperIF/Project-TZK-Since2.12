; This script generates available string that can be safely applied in "publicExec" command
; OFP can't handle too long string

; args: [left index, right index, params]
_left = _this select 0; _right = _this select 1; _params = _this select 2

? _left > right: showDebug [format ["%1, %2 are invalid in GenStrAndExec.sqs", _left, _right], 5000], exit

_selectedUnits = _params select 0

; The CONTENT of funcGenNetIdStr is desired "NetworkID" return value. However we're
; trying to pass many NetworkIDs across the internet. To generate a precise string, 
; we manually append a string as if it's formatted NetworkID array. Also, the CONTENT
; of this string is what we desired.
_localNetIds = []; _localNetIds resize (_right - _left + 1)
_str = "["
_i = _left
# loop
	_obj = _selectedUnits select _i
	_localNetIds set [_i - _left, NetworkID _obj]
	_str = _str + format [{%1%2}, _obj call funcGenNetIdStr, if (_i != _right) then {","} else {""}]

	; # netIdGet
	_i = _i + 1
	? _i <= _right: goto "loop"
_str = _str + "]"

; "_this" is reference of the input of "GenArrayCommand.sqs". create deep copy for params
_localParam = + _params
; RTS order sender itself can directly pass parameters to script
_localParam set [0, _localNetIds], _localParam exec "Rts\Framework\Distributor.sqs"
; For network broadcast, we need the CONTENT of "_str"
_remoteParam = + _params
_remoteParam set [0, 0]; _rest = format ["%1", _remoteParam], _rest = substr [_rest, 3, sizeofstr _rest - 1]
publicExec format [{[%1,%2] exec "Rts\Framework\Distributor.sqs"}, _str, _rest]