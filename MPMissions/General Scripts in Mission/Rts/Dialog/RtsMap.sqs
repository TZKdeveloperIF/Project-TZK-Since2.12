; args: [pos, player group selected units]
_pos = _this select 0, _units = _this select 1
@ !mutexDlg
mutexDlg = true; dlgID = dlgID + 1; _dlgID = dlgID
_dlg = createDialog "TzkCmdMapDlgRts"
mutexDlg = false

@ not mutexRtsMouse
	mutexRtsMouse = true
	_id = rtsMouseId
	mutexRtsMouse = false
[true, _id + 1, _pos] exec (TzkScripts select 363);

_idcLeftBtn0 = IDC + 16 * 2 + 0
_idcDownBtn0 = IDC + 16 * 17 + 0
; init right-down corner buttons (switching to other rts dialogs)
; 0: rts, 1: area, 2: wpco, 3: player order, 4: point
[0, _units] call preprocessFile "Rts\Dialog\InitSwitchDialogBtns.sqf"

; init left-down corner buttons (select specific type of units)
_idcLeftDownBtn0 = IDC + 16 * 12 + 0
_cache0 = []; _cache1 = []; _cacheText1 = []; _btnVal = -1
_level = TzkSelStackIdx
; Remove dead units in selected array
((call preprocessFile (TzkScripts select 370)) select _level) call preprocessFile (TzkScripts select 368)
if (1 == _level) then {_btnVal = TzkSelLv1Btn}; if (2 == _level) then {_btnVal = TzkSelLv2Btn}
[_idcLeftDownBtn0, _level, _btnVal] call preprocessFile "Rts\Dialog\UpdateRtsDlgType.sqf"

btnValue00 = -1; btnValue01 = 0; btnValue02 = 0; btnValue03 = 0
btnFirstCtrl = false
ctrlSetText [IDC + 16 * 32 + 2, localize {TZK_LANG_AREA}]
btnFunction = 0

; left board
; { ctrlShow [_x, false] } forEach []
ctrlSetText [_idcLeftBtn0, localize {TZK_LANG_MOVE}]
ctrlSetText [_idcLeftBtn0 + 1, format ["%1 RTS %2", localize {TZK_LANG_CLEAR}, localize {TZK_LANG_ORDER}]]
ctrlSetText [_idcLeftBtn0 + 13, localize {TZK_LANG_STOP}]

ctrlSetText [_idcLeftBtn0 + 2, localize {TZK_LANG_SHOOT} + " " + localize {TZK_LANG_AREA}]
ctrlSetText [_idcLeftBtn0 + 3, format ["%1 %2 %3", localize {TZK_LANG_MOVE}, localize {TZK_LANG_AND}, localize {TZK_LANG_SHOOT}]]
ctrlSetText [_idcLeftBtn0 + 4, localize {TZK_LANG_BOARD}]
ctrlSetText [_idcLeftBtn0 + 5, localize {TZK_LANG_OCCUPY}]
ctrlSetText [_idcLeftBtn0 + 6, localize {TZK_LANG_HELICOPTER_LAND}]
ctrlSetText [_idcLeftBtn0 + 7, localize {TZK_LANG_RECLAIM}]

ctrlSetText [_idcLeftBtn0 + 8, format ["%1 %2", localize {TZK_LANG_MINE_VERB}, localize {TZK_LANG_AREA}]]
ctrlSetText [_idcLeftBtn0 + 9, format ["%1 %2", localize {TZK_LANG_DISABLE}, localize {TZK_LANG_MINE}]]

ctrlSetText [_idcLeftBtn0 + 10, localize {TZK_LANG_REPAIR}]
ctrlSetText [_idcLeftBtn0 + 11, localize {TZK_LANG_REARM}]

ctrlSetText [_idcLeftBtn0 + 12, format ["%1%2", localize {TZK_LANG_CROSS}, localize {TZK_LANG_BRIDGE}]]

ctrlSetText [_idcLeftBtn0 + 14, format ["%1 %2", localize {TZK_LANG_MOVE}, localize {TZK_LANG_LAND}]];
ctrlSetText [_idcLeftBtn0 + 15, format ["%1 %2", localize {TZK_LANG_MOVE}, localize {TZK_LANG_SHIP}]];

; down board
_downBoardStack = []
call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"

; false call preprocessFile "Rts\Dialog\InitSilider.sqf"

btnValue05 = -1;
(IDC + 16 * 19) call preprocessFile "Rts\Dialog\InitSelClassificationBtns.sqf"

# Update
	; ctrlShow [IDC_DialogBG_CR, !bool_TZK_DarkSkin]; ctrlShow [IDC_DialogBG_Light, bool_TZK_DarkSkin]
	? call dlgUpdated: goto "Quit"
	? not alive player: closeDialog 0; goto "Quit"

	? btnValue00 >= 0: _btnVal = btnValue00; btnValue00 = -1; goto "LeftBtn"
	? btnValue01 > 0: _btnVal = btnValue01; btnValue01 = 0; goto "DownBtn"
	? btnValue02 > 0: _btnVal = btnValue02; btnValue02 = 0; goto "LeftDownBtn"
	? btnValue03 > 0: _btnVal = btnValue03; btnValue03 = 0; goto "RightDownBtn"
	? btnValue05 >= 0: _btnVal = btnValue05; btnValue05 = -1; goto "SwitchClassification"
	? btnFirstCtrl: btnFirstCtrl = false; goto "FirstCtrl"
	? btnFunction > 0: _btnFnc = btnFunction, btnFunction = 0, goto "FunctionalBtns"

	; Skip
	~0.2
	goto "Update"
# Quit
	[false, _id + 2] exec (TzkScripts select 363); exit
# FirstCtrl
	; switch to area map rapidly
	_btnVal = 2 ^ 1
	call preprocessFile "Rts\Dialog\SwitchDialogBehavior.sqf"; goto "Quit"
# FunctionalBtns
	? 1 == _btnFnc: false call preprocessFile (TzkScripts select 362); 0 exec (TzkScripts select 023); closeDialog 0; goto "Quit"
	? 2 == _btnFnc: goto "Unselect"
	goto "Update"
	# Unselect
		; unselect units, and switch to area dialog
		false call preprocessFile (TzkScripts select 362);
		_btnVal = 2 ^ 1
		call preprocessFile "Rts\Dialog\SwitchDialogBehavior.sqf"
		goto "Quit"
; todo: magic number should better
# LeftBtn
	; by now not allow RTS-orderwhen selecting other players' units
	; todo: better control mode
	? 3 == TzkRtsSelectEnum: hint "Only allow Disband on other players' units."; goto "Update"

	? 0 == _btnVal: _pos exec "Rts\Order\sMove.sqs"; closeDialog 0; goto "Quit"
	? 1 == _btnVal: 0 exec "Rts\Order\sClear.sqs"; closeDialog 0; goto "Quit"
	? 13 == _btnVal: 0 exec "Rts\Order\sStop.sqs"; closeDialog 0; goto "Quit"

	? 2 == _btnVal: [_pos, false, true] exec "Rts\SubMenu\AreaArtOrderPreset.sqs"; closeDialog 0; goto "Quit"
	? 3 == _btnVal: [_pos, true, true] exec "Rts\SubMenu\AreaArtOrderPreset.sqs"; closeDialog 0; goto "Quit"
	? 4 == _btnVal: _pos exec "Rts\SubMenu\BoardPreset.sqs"; closeDialog 0; goto "Quit"
	? 5 == _btnVal: _pos exec "Rts\SubMenu\OccupyPreset.sqs"; closeDialog 0; goto "Quit"
	? 6 == _btnVal: 0 exec "Rts\Order\sLand.sqs"; closeDialog 0; goto "Quit"
	? 7 == _btnVal: _pos exec "Rts\SubMenu\ReclaimPreset.sqs"; closeDialog 0; goto "Quit"
	? 8 == _btnVal: [true, true] exec "Rts\SubMenu\MinePreset.sqs"; closeDialog 0; goto "Quit"
	? 9 == _btnVal: [true, false] exec "Rts\SubMenu\MinePreset.sqs"; closeDialog 0; goto "Quit"

	? 10 == _btnVal: _pos exec "Rts\Submenu\RepairPreset.sqs"; closeDialog 0; goto "Quit"
	? 11 == _btnVal: _pos exec "Rts\Submenu\RearmPreset.sqs"; closeDialog 0; goto "Quit"

	? 12 == _btnVal: [_pos, _units, true] exec "Rts\Submenu\CrossBridgePreset.sqs"; closeDialog 0; goto "Quit"

	? 14 == _btnVal: [_pos] call preprocessFile "Rts\Preset\oForceMoveLand.sqf"; closeDialog 0; goto "Quit"
	? 15 == _btnVal: [_pos] call preprocessFile "Rts\Preset\oForceMoveShip.sqf"; closeDialog 0; goto "Quit"
	; value 13 is occupied
	goto "Update"
; Share same structure and effect with player group order
# DownBtn
	; by now only allow "disband" RTS-trigger when selecting other players' units
	; todo: better control mode
	? 3 == TzkRtsSelectEnum && 2^0 != _btnVal: hint "Only allow Disband on other players' units."; goto "Update"

	? count _downBoardStack > 0: goto "DownSubMenu"

	? 2^0 == _btnVal: 0 exec "Rts\SubMenu\DisbandPreset.sqs"; closeDialog 0; goto "Quit"
	? 2^1 == _btnVal: 0 exec "Rts\Trigger\sEject.sqs"; TitleText ["Eject cargos.\nDriver, gunner and commander won't eject.", "Plain DOWN", 0.25]; closeDialog 0; goto "Quit"
	? 2^2 == _btnVal: 0 exec "Rts\Trigger\sDisembark.sqs"; TitleText ["Ask all units to disembark. If there're player's units in vehicle, they might prevernt subsequent AI units' disembark.", "Plain DOWN", 0.25]; closeDialog 0; goto "Quit"

	? 2^3 == _btnVal: 0 exec "Rts\SubMenu\JoinPreset.sqs"; closeDialog 0; goto "Quit"

	? 2^4 == _btnVal: _downBoardStack set [0, 4]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^5 == _btnVal: _downBoardStack set [0, 5]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^6 == _btnVal: _downBoardStack set [0, 6]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^7 == _btnVal: _downBoardStack set [0, 7]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^8 == _btnVal: _downBoardStack set [0, 8]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"

	? 2^9 == _btnVal: _pos exec "Rts\Trigger\sWatch.sqs"; closeDialog 0; goto "Quit"
	? 2^10 == _btnVal: [true] exec "Rts\SubMenu\SwitchSeat.sqs"; closeDialog 0; goto "Quit"
	? 2^11 == _btnVal: 0 exec "Rts\Trigger\sEngineOff.sqs"; closeDialog 0; goto "Quit"
	goto "Update"
	# DownSubMenu
		_return = false

		? 2^0 == _btnVal && 4 == _downBoardStack select 0: [tsLeft] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^1 == _btnVal && 4 == _downBoardStack select 0: [tsCenter] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^2 == _btnVal && 4 == _downBoardStack select 0: [tsRight] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^3 == _btnVal && 4 == _downBoardStack select 0: [tsLeft] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^4 == _btnVal && 4 == _downBoardStack select 0: [tsCenter] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^5 == _btnVal && 4 == _downBoardStack select 0: [tsRight] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"

		? 2^9 == _btnVal && 4 == _downBoardStack select 0: TitleText ["This button displays message only. Click other buttons please.", "Plain DOWN", 0.25]; goto "Update"
		? 2^10 == _btnVal && 4 == _downBoardStack select 0: TitleText ["This button displays message only. Click other buttons please.", "Plain DOWN", 0.25]; goto "Update"

		? 2^0 == _btnVal && 5 == _downBoardStack select 0: true exec "Rts\Trigger\sSpoof.sqs"; _return = true
		? 2^1 == _btnVal && 5 == _downBoardStack select 0: false exec "Rts\Trigger\sSpoof.sqs"; _return = true
		? 2^2 == _btnVal && 5 == _downBoardStack select 0: [true] exec "Rts\SubMenu\FlightAltitudePreset.sqs"; closeDialog 0; goto "Quit"
		? 2^3 == _btnVal && 5 == _downBoardStack select 0: true exec "Rts\Trigger\sAfterBurner.sqs"; _return = true
		? 2^4 == _btnVal && 5 == _downBoardStack select 0: false exec "Rts\Trigger\sAfterBurner.sqs"; _return = true

		? 2^0 == _btnVal && 6 == _downBoardStack select 0: true exec "Rts\Trigger\sTransportTurn.sqs"; _return = true
		? 2^1 == _btnVal && 6 == _downBoardStack select 0: false exec "Rts\Trigger\sTransportTurn.sqs"; _return = true

		? 2^0 == _btnVal && 7 == _downBoardStack select 0: true exec "Rts\Trigger\sTankSwitchMainGun.sqs"; _return = true
		? 2^1 == _btnVal && 7 == _downBoardStack select 0: false exec "Rts\Trigger\sTankSwitchMainGun.sqs"; _return = true
		? 2^2 == _btnVal && 7 == _downBoardStack select 0: 0 exec "Rts\Trigger\sTankDisengage.sqs"; _return = true

		? 2^0 == _btnVal && 8 == _downBoardStack select 0: true exec "Rts\Trigger\sDeploy.sqs"; _return = true
		? 2^1 == _btnVal && 8 == _downBoardStack select 0: false exec "Rts\Trigger\sDeploy.sqs"; _return = true
		? 2^2 == _btnVal && 8 == _downBoardStack select 0: [true] exec "Rts\SubMenu\SwitchArtMag.sqs"; _return = true
		; todo: realize it for AI groups
		? 2^6 == _btnVal && 8 == _downBoardStack select 0: hint "Not realized yet."; goto "Update"
		? 2^7 == _btnVal && 8 == _downBoardStack select 0: hint "Not realized yet."; goto "Update"
		? 2^11 == _btnVal && 8 == _downBoardStack select 0: hint "Not realized yet."; goto "Update"

		? 2^8 == _btnVal: _return = true

		? _return: _downBoardStack resize 0; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
		~ 0.1
		goto "Update"
# LeftDownBtn
	; disable type switch when selecting non-AI group uints
	? 0 != TzkRtsSelectEnum: goto "Update"

	if (2^8 == _btnVal) then {_level = _level - 1} else {_level = _level + 1}
	((call preprocessFile (TzkScripts select 370)) select _level) call preprocessFile (TzkScripts select 368)
	[_idcLeftDownBtn0, _level, _btnVal] call preprocessFile "Rts\Dialog\UpdateRtsDlgType.sqf"
	goto "Update"
# RightDownBtn
	? _btnVal > 0: call preprocessFile "Rts\Dialog\SwitchDialogBehavior.sqf"; goto "Quit"
	goto "Update"
# SwitchClassification
	? _btnVal == TzkRtsSelectEnum: hint "Exception caught."; goto "Update"

	TzkRtsSelectEnum = _btnVal
	_this exec "Rts\Dialog\RtsMap.sqs"; closeDialog 0; goto "Quit"