; args: [pos, player group selected units]
_pos = _this select 0; _units = _this select 1

? (count _units) == 0: exit

@ !mutexDlg
mutexDlg = true; dlgID = dlgID + 1; _dlgID = dlgID
_dlg = createDialog "TzkCmdMapDlgPplOrder"
mutexDlg = false

@ not mutexRtsMouse
	mutexRtsMouse = true
	_id = rtsMouseId
	mutexRtsMouse = false
[true, _id + 1, _pos] exec "Player\Rts\SetRtsMouse.sqs";

; init right-down corner buttons (switching to other rts dialogs)
; 0: rts, 1: area, 2: wpco, 3: player order, 4: point
[3, _units] call preprocessFile "Rts\Dialog\InitSwitchDialogBtns.sqf"

? !bool_TZK_CHN_inited && bool_TZK_CHN_Lang: call loadFile (TzkScripts select 192)

; ctrlShow [IDC_DialogBG_CR, !bool_TZK_DarkSkin]; ctrlShow [IDC_DialogBG_Light, bool_TZK_DarkSkin]

_idcOrders1 = IDC + 16 * 3 + 0

_idcPar0Label = IDC + 16 * 3 + 1
_idcPar0List = IDC + 16 * 3 + 2
_idcPar1Label = IDC + 16 * 3 + 3
_idcPar1List = IDC + 16 * 3 + 4
_idcPar2Label = IDC + 16 * 3 + 5
_idcPar2List = IDC + 16 * 3 + 6

_bias1 = 0, _offsetOrder1End = 0
; load from config
_lastOrder = "LastOrder" call preprocessFile "Cfg\LoadPlayerValue.sqf", _oldValLo = _lastOrder
call preprocessFile "Player\Dialog\OrderPlayerAi_Init.sqf"

_idcLeftDownBtn0 = IDC + 16 * 12 + 0, btnValue02 = -1
_idcDownBtn0 = IDC + 16 * 17 + 0, btnValue01 = -1
_idcLeftBtn0 = IDC + 16 * 2 + 0, btnValue00 = -1
_idcMidBtn0 = IDC + 16 * 14 + 0, btnValue04 = -1
btnValue03 = 0
; process buttons' text and CHN textures
call preprocessFile "Player\Dialog\OrderAiBtns.sqf"

; down board
_downBoardStack = []
call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"

TzkMapRtsFlashingDisabled = true

; "selected Order" means index of listbox. Since there's offset the (index + offset) should be the order id
; _selectedOrder = _lastOrder - _bias1
; give "-1" value to refresh param list
_selectedOrder = -1

# Update

	? call dlgUpdated: goto "Quit"
	? !(alive player): closeDialog 0; goto "Quit"

	? (_selectedOrder != lbCurSel _idcOrders1): goto "NewOrderSelected"
	? btnSendOrder: btnSendOrder=false, goto "SendOrder"

	? btnValue04 >= 0: _val3 = btnValue04; btnValue04 = -1; goto "MidBtn"
	? btnValue02 >= 0: _val2 = btnValue02; btnValue02 = -1; goto "LeftDownBtn"
	? btnValue01 >= 0: _btnVal = btnValue01; btnValue01 = -1; goto "DownBtn"
	? btnValue00 >= 0: _val0 = btnValue00; btnValue00 = -1; goto "LeftBtn"
	? btnValue03 > 0: _val4 = btnValue03; btnValue03 = 0; goto "RightDownBtn"

	~ 0.2
	goto "Update"
# Quit
	; save to config
	? _oldValLo != _lastOrder: ["LastOrder", _lastOrder] call preprocessFile "Cfg\SavePlayerValue.sqf"

	TzkMapRtsFlashingDisabled = false
	[false, _id + 2] exec "Player\Rts\SetRtsMouse.sqs"; exit

# MidBtn
	? 0 == _val3: {[_x, _pos] exec (TzkScripts select 095)} forEach _units; closeDialog 0; goto "Quit"
	? 1 == _val3: {[_x, _pos] exec "Player\Order\Support ForceRearm.sqs"} forEach _units; closeDialog 0; goto "Quit"
	? 2 == _val3: [_units, _pos] exec (TzkScripts select 271); closeDialog 0; goto "Quit"

	? 4 == _val3: [true, _units] exec "Player\Order\Clear.sqs"; closeDialog 0; goto "Quit"
	? 5 == _val3: _units exec "Player\Disband.sqs"; closeDialog 0; goto "Quit"
	goto "Update"
# LeftDownBtn
	goto "Update"
; Share same structure and effect with RTS order
# DownBtn
	? count _downBoardStack > 0: goto "DownSubMenu"

	? 2^0 == _btnVal: _units exec "Player\Disband.sqs"; closeDialog 0; goto "Quit"
	? 2^1 == _btnVal: _units exec "Player\RtsEject.sqs"; TitleText ["Eject cargos.\nDriver, gunner and commander won't eject.", "Plain DOWN", 0.25]; closeDialog 0; goto "Quit"
	? 2^2 == _btnVal: TitleText ["Not implemented. Please use 4-1.", "Plain DOWN", 0.25], goto "Update"

	? 2^3 == _btnVal: [_units] exec "Join\Submenu\PplOrder.sqs"; closeDialog 0; goto "Quit"

	? 2^4 == _btnVal: _downBoardStack set [0, 4]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^5 == _btnVal: _downBoardStack set [0, 5]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^6 == _btnVal: _downBoardStack set [0, 6]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^7 == _btnVal: _downBoardStack set [0, 7]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
	? 2^8 == _btnVal: _downBoardStack set [0, 8]; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"

	? 2^9 == _btnVal: TitleText ["Not implemented. Please use Alt + Click.", "Plain DOWN", 0.25], goto "Update"
	? 2^10 == _btnVal: [false, _units] exec "Rts\SubMenu\SwitchSeat.sqs"; closeDialog 0; goto "Quit"
	? 2^11 == _btnVal: _units exec "Player\RtsEngineOff.sqs"; closeDialog 0; goto "Quit"
	goto "Update"
	# DownSubMenu
		_return = false

		? 2^0 == _btnVal && 4 == _downBoardStack select 0: [tsLeft, _units] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^1 == _btnVal && 4 == _downBoardStack select 0: [tsCenter, _units] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^2 == _btnVal && 4 == _downBoardStack select 0: [tsRight, _units] exec "Rts\Trigger\AttachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^3 == _btnVal && 4 == _downBoardStack select 0: [tsLeft, _units] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^4 == _btnVal && 4 == _downBoardStack select 0: [tsCenter, _units] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"
		? 2^5 == _btnVal && 4 == _downBoardStack select 0: [tsRight, _units] exec "Rts\Trigger\DetachPreset.sqs"; closeDialog 0; goto "Quit"

		? 2^9 == _btnVal && 4 == _downBoardStack select 0: TitleText ["This button displays message only. Click other buttons please.", "Plain DOWN", 0.25]; goto "Update"
		? 2^10 == _btnVal && 4 == _downBoardStack select 0: TitleText ["This button displays message only. Click other buttons please.", "Plain DOWN", 0.25]; goto "Update"

		? 2^0 == _btnVal && 5 == _downBoardStack select 0: [_units, true] exec "Player\RtsSpoof.sqs"; _return = true
		? 2^1 == _btnVal && 5 == _downBoardStack select 0: [_units, false] exec "Player\RtsSpoof.sqs"; _return = true
		? 2^2 == _btnVal && 5 == _downBoardStack select 0: [false, [_units]] exec "Rts\SubMenu\FlightAltitudePreset.sqs"; closeDialog 0; goto "Quit"
		? 2^3 == _btnVal && 5 == _downBoardStack select 0: [_units, true] exec "Player\RtsAfterBurner.sqs"; _return = true
		? 2^4 == _btnVal && 5 == _downBoardStack select 0: [_units, false] exec "Player\RtsAfterBurner.sqs"; _return = true

		? 2^0 == _btnVal && 6 == _downBoardStack select 0: [_units, true] exec "Player\RtsTransportTurn.sqs"; _return = true
		? 2^1 == _btnVal && 6 == _downBoardStack select 0: [_units, false] exec "Player\RtsTransportTurn.sqs"; _return = true

		? 2^0 == _btnVal && 7 == _downBoardStack select 0: [_units, true] exec "Player\RtsTankSwitchMainGun.sqs"; _return = true
		? 2^1 == _btnVal && 7 == _downBoardStack select 0: [_units, false] exec "Player\RtsTankSwitchMainGun.sqs"; _return = true
		? 2^2 == _btnVal && 7 == _downBoardStack select 0: TitleText ["Not implemented. Please use 3-6.", "Plain DOWN", 0.25]; _return = true

		? 2^0 == _btnVal && 8 == _downBoardStack select 0: [_units, true] exec "Player\RtsDeploy.sqs"; _return = true
		? 2^1 == _btnVal && 8 == _downBoardStack select 0: [_units, false] exec "Player\RtsDeploy.sqs"; _return = true
		? 2^2 == _btnVal && 8 == _downBoardStack select 0: [false, _units] exec "Rts\SubMenu\SwitchArtMag.sqs"; closeDialog 0; goto "Quit"
		; Art auto shoot
		? 2^6 == _btnVal && 8 == _downBoardStack select 0: [_units, true] exec "Art\ExecAutoDetectPpl.sqs"; closeDialog 0; goto "Quit"
		? 2^7 == _btnVal && 8 == _downBoardStack select 0: [_units, false] exec "Art\ExecAutoDetectPpl.sqs"; closeDialog 0; goto "Quit"
		? 2^11 == _btnVal && 8 == _downBoardStack select 0: [_units, true, true] exec "Art\ExecAutoDetectPpl.sqs"; closeDialog 0; goto "Quit"

		? 2^8 == _btnVal: _return = true

		? _return: _downBoardStack resize 0; call preprocessFile "Rts\Dialog\UpdateRtsDownBoard.sqf"; goto "Update"
		~ 0.1
		goto "Update"
# LeftBtn
	? 0 == _val0: {[_x, _pos] exec "\TZK_Scripts_4_0_4\Player\Order\MovePos.sqs"} forEach _units; closeDialog 0; goto "Quit"
	? 1 == _val0: [true, _units] exec "Player\Order\Clear.sqs"; closeDialog 0; goto "Quit"
	? 13 == _val0: {_x exec "Player\Order\Stop.sqs"} forEach _units; closeDialog 0; goto "Quit"

	? 2 == _val0: [_units, _pos] exec "Player\Order\PreShootArea.sqs"; closeDialog 0; goto "Quit"
	? 4 == _val0: [false, _units] exec "Rts\SubMenu\SwitchArtMag.sqs"; closeDialog 0; goto "Quit"
	? 5 == _val0: [_units, _pos] exec "Player\Order\PreBuyEquip.sqs"; closeDialog 0; goto "Quit"
	? 6 == _val0: [false, _units] exec "Rts\SubMenu\SwitchSeat.sqs"; closeDialog 0; goto "Quit"
	? 7 == _val0: [_units] exec "Join\Submenu\PplOrder.sqs"; closeDialog 0; goto "Quit"
	
	? 8 == _val0: [_pos, _units, false] exec "Rts\Submenu\CrossBridgePreset.sqs"; closeDialog 0; goto "Quit"
	? 9 == _val0: [_pos, _units] call preprocessFile "Rts\Preset\oForceMoveLand.sqf"; closeDialog 0; goto "Quit"
	? 10 == _val0: [_pos, _units] call preprocessFile "Rts\Preset\oForceMoveShip.sqf"; closeDialog 0; goto "Quit"

	? 11 == _val0: _units exec "Player\Order\RtsPreDisable.sqs"; closeDialog 0; goto "Quit"
	? 12 == _val0: _units exec "Player\Order\RtsPreMineArea.sqs"; closeDialog 0; goto "Quit"
	; value 13 is occupied

	goto "Update"
# RightDownBtn
	? _val4 > 0: call preprocessFile "Rts\Dialog\SwitchDialogBehavior.sqf"; goto "Quit"
	goto "Update"

# SendOrder
	? _lastOrder == -1: hint "No order selected", goto "Update"

	; ignore invalidated item
	? _lastOrder >= 0 && _lastOrder < _bias1 || _lastOrder >= count aiOrders1 - _offsetOrder1End: goto "Update"

	_params = []
	? (count (_order select 1)) >= 1: _params set [0, lbCurSel _idcPar0List]
	? (count (_order select 1)) >= 2: _params set [1, lbCurSel _idcPar1List]
	? (count (_order select 1)) >= 3: _params set [2, lbCurSel _idcPar2List]
	closeDialog 0
	~0.1
	_order = aiOrders1 select _lastOrder
	_script = format["%1", _order select 3]
	? _order select 2: [_units, _pos, _params] exec _script; goto "Quit"
	{ [_x, _pos, _params] exec _script } forEach _units
	goto "Quit"

# NewOrderSelected
	_selectedOrder = lbCurSel _idcOrders1; _lastOrder = _selectedOrder + _bias1
	_order = aiOrders1 select (_selectedOrder + _bias1)

	; ctrlSetText [_idcOrderDesc, (_order select 4) call funcLocStr]

	_params = _order select 1

	{ ctrlShow [_x, count _params >= 1] } forEach [_idcPar0Label, _idcPar0List]
	{ ctrlShow [_x, count _params >= 2] } forEach [_idcPar1Label, _idcPar1List]
	{ ctrlShow [_x, count _params >= 3] } forEach [_idcPar2Label, _idcPar2List]

	? count _params == 0: goto "Update"
	? count _params >= 1: _par = _params select 0; ctrlSetText [_idcPar0Label, _par select 0]; lbClear _idcPar0List; _i=0; while "_i < (_par select 1)" do { lbAdd [_idcPar0List, _i call (_par select 2)]; _i=_i+1 }; lbSetCurSel [_idcPar0List, _par select 3]
	? count _params >= 2: _par = _params select 1; ctrlSetText [_idcPar1Label, _par select 0]; lbClear _idcPar1List; _i=0; while "_i < (_par select 1)" do { lbAdd [_idcPar1List, _i call (_par select 2)]; _i=_i+1 }; lbSetCurSel [_idcPar1List, _par select 3]
	? count _params >= 3: _par = _params select 2; ctrlSetText [_idcPar2Label, _par select 0]; lbClear _idcPar2List; _i=0; while "_i < (_par select 1)" do { lbAdd [_idcPar2List, _i call (_par select 2)]; _i=_i+1 }; lbSetCurSel [_idcPar2List, _par select 3]
	goto "Update"
