; ---------------------------------------------------------------------------------------------------
; |									RTS Board Order SQS Script										|
; |		  Units will try board vehicles on ordered. If fail to board any of them, units will stay	|
; |		there until another new rts order is activated or rts order is cleared (same as in RA2).	|
; ---------------------------------------------------------------------------------------------------

; args: [unit, [clicked pos, central pos of all selected units, transport vehicle type info: number], 
; 	rts object status (array-reference), rts server id]
_unit = _this select 0
_clickedPos = _this select 1 select 0
_rtsCentralPos = _this select 1 select 1
_transpTypeInfo = _this select 1 select 2
_rtsStatus = _this select 2
_id = _this select 3
_this = 0

; rts busy Check
; not realized yet

; rts order stack design
; not realized yet

_si = sides find (side _unit)
? _si != si0 && _si != si1: exit

? _unit != vehicle _unit: exit

; under "RtsOrder" folder the "rts id" is restored by "id" variable but not "rtsId"
_quitCond = {not alive _unit || not (_unit call rtsOrderCheck) || _id != _rtsStatus select 1}

_unit call preprocessFile "Server\AI\RtsOrderBegin.sqf"
; Initialize The Order Script
_timeStart = _time; _timeUp = _timeStart; _cycle = 30
_destPos = [_unit, _clickedPos, _rtsCentralPos, 50] call preprocessFile "Util\RtsDestPos.sqf"

; vehicle types are listed by priority: heli, apc, truck, ship, plane, support apc, repair truck, jeep
_totalTranspTypes = 8
_i = 0, _c = _totalTranspTypes, _transpTypes = [], _transpTypes resize _c
# buildTransType
	_res = _transpTypeInfo % 2
	_transpTypeInfo = (_transpTypeInfo - _res) / 2
	_transpTypes set [_i, _res != 0]
	_i = _i + 1
	? _i < _c: goto "buildTransType"

? [_unit, _destPos] call funcDistH < 50: goto "ExecBoard"
# Update
	; check move
	_distToDest = [_unit, _destPos] call funcDistH
	? _distToDest < 50: goto "ExecBoard"
	[_unit, _destPos] call funcMoveStand
	_cycle = [30, 0.1*_distToDest] select (_distToDest < 300)
	goto "Sleep"

# ExecBoard
	[_unit, [true]] exec localize {TZK_AI_STOP}
	_nearByTargets = [_destPos, 50] call funcGetNearbyTransports
	? count _nearByTargets == 0: goto "Quit"

	_targets = [], _selectedTypes = [], _target = objNull, _suggestedIdx = -1
	_typeIdx = 0; _totalTryCnt = 0

	# SearchTarget
		_totalTryCnt = _totalTryCnt + 1
		? _totalTryCnt > 100: goto "Quit"

		? _typeIdx >= _totalTranspTypes: goto "Quit"
		? not (_transpTypes select _typeIdx): _typeIdx = _typeIdx + 1, goto "SearchTarget"
	
		? 0 == _typeIdx: _selectedTypes = [TransportHeliW + TransportirNOHeliW, TransportHeliE + TransportirNOHeliE + TransportHindE] select _si
		? 1 == _typeIdx: _selectedTypes = [Transport6APCW + Transport8APCW, Transport6APCE + Transport8APCE] select _si
		? 2 == _typeIdx: _selectedTypes = [TransportTruckW, TransportTruckE] select _si
		? 3 == _typeIdx: _selectedTypes = [TransportShipW + TransportZodiacW, TransportShipE + TransportZodiacE] select _si
		? 4 == _typeIdx: _selectedTypes = [TransportPlaneW, TransportPlaneE] select _si
		? 5 == _typeIdx: _selectedTypes = [TransportSupAPCW, TransportSupAPCE] select _si
		? 6 == _typeIdx: _selectedTypes = [TransportRepairTruckW, TransportRepairTruckE] select _si
		? 7 == _typeIdx: _selectedTypes = [TransportCarW, TransportCarE] select _si

		call preprocessFile "Rts\Order\assistBoard.sqf"

		_typeIdx = _typeIdx + 1
		? count _targets == 0: goto "SearchTarget"
		? count _targets > 1: _typeIdx = _typeIdx - 1
		_target = _targets select _suggestedIdx select 0

	; TryBoardVehicle
		? not alive _target: goto "SearchTarget"

		_unit doWatch _target
		? (_unit distance _target) < 10: goto "Reached"
		_destPos4Board = ([getPos _target, 10, 10] call funcGetRandomPos), _destPos4Board set [2, 0]

		_timeMoveAbort = time + 2 * 60
		# Move_Check
			_distToDest = [_unit, _destPos4Board] call funcDistH
			? _distToDest < 10: goto "Reached"
			_delay = [5, _distToDest / 5] select (_distToDest < 25)

			? not alive _target: goto "SearchTarget"
			? (_target call funcGetCargoNum) >= (_target call funcGetTranspVol): goto "SearchTarget"
			[_unit, _destPos4Board] call funcMoveStand

			~ _delay

			? call _quitCond: goto "Quit"

			? time > _timeMoveAbort || not alive _target: goto "SearchTarget"
			? (_unit distance _target) > 10: goto "Move_Check"

		# Reached
			; On calling Embark, extra delay is required if wish to execute after having embarked
			_delay = [_unit, _target, "Cargo"] call preprocessFile "Util\Embark.sqf"
			~ _delay + 0.2
			? _target != vehicle _unit: goto "SearchTarget"

# Quit
	exit

# Sleep
_loop = (_time-_timeStart) / _cycle; _loop = 1 + _loop - _loop % 1
_timeUp = _loop * _cycle + _timeStart
	# innerSleep
	~ (if (_timeUp - _time > 5) then {_timeUp - _time + 1} else {5})
	? call _quitCond: goto "Quit"
	? _time < _timeUp: goto "innerSleep"
	? _unit call busyCheck: goto "Sleep"
	goto "Update"