; args: [type, driver, gunner, commander, pos, dir, si, gi, groupJoin, giBuyer, sendRepeats, nCustomWeapon]
_nCustomWeapon = _this select (count _this - 1)

_type = _this select 0
_driver = _this select 1
_gunner = _this select 2
_commander = _this select 3
_pos = _this select 4
_dir = _this select 5
_si = _this select 6
_gi = _this select 7
_group = _this select 8
_giBuyer = _this select 9
_sendRepeats = _this select 10

; execute with server groups mutex
? _type >= maxUnitTypes: goto "BuySoldier"
? _type < 0 || _type >= (count unitDefs) : format ["ERROR: _type is out of range (%1) in Creating", _type] call fDebugLog; exit

_desc = unitDefs select _type
? count (_desc select udCrew) == 0: goto "BuySoldier"

; must be a vehicle if we got here
_vehicle = [_type, _pos, _dir, _si, _gi, _giBuyer, _sendRepeats] call fAddVehicle
? isNull _vehicle: format ["ERROR: _vehicle is NULL in Creating"] call fDebugLog; exit
? -1 != _nCustomWeapon: [_vehicle, _type, _nCustomWeapon, _si] exec "Cwv\Equip.sqs"

_typeCrew = _desc select udCrew select 1
_unitsToBuild = _driver + _gunner + _commander
@ not (mutexBuildingQueue select _si select _gi)
	mutexBuildingQueue select _si set [_gi, true]
	_full = count units (groupMatrix select _si select _gi) + _unitsToBuild > maxGroupSize
	? _full: [_si, _giBuyer, _typeCrew, _unitsToBuild] exec "Network\sRefund.sqs", goto "unlock"
	; create crews
		? _driver == 0 : goto "SkipDriver"
		~ 0.1
		_crew = [_typeCrew, _pos, _dir, _si, _gi, _group, _giBuyer] call fAddSoldier
		? alive _crew && alive _vehicle : _crew moveInDriver _vehicle
	# SkipDriver
		? _gunner == 0 : goto "SkipGunner"
		~ 0.1
		_crew = [_typeCrew, _pos, _dir, _si, _gi, _group, _giBuyer] call fAddSoldier
		? alive _crew && alive _vehicle : _crew moveInGunner _vehicle
	# SkipGunner
		? _commander == 0 : goto "SkipCommander"
		~ 0.1
		_crew = [_typeCrew, _pos, _dir, _si, _gi, _group, _giBuyer] call fAddSoldier
		? alive _crew && alive _vehicle : _crew moveInCommander _vehicle
	# SkipCommander

# unlock
	mutexBuildingQueue select _si set [_gi, false]; exit

# BuySoldier
	@ not (mutexBuildingQueue select _si select _gi)
		mutexBuildingQueue select _si set [_gi, true]
		_full = count units (groupMatrix select _si select _gi) + 1 > maxGroupSize
		? _full: [_si, _giBuyer, _type, 1] exec "Network\sRefund.sqs"
		? not _full: [_type, _pos, _dir, _si, _gi, _group, _giBuyer] call fAddSoldier
		mutexBuildingQueue select _si set [_gi, false]
	exit