; args: [unit, si, gi, vehicleRearm, type, support, <non-controlable AI group>, <use comm money>]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_vehicle = _this select 3
_type = _this select 4
_support = _this select 5
_nonAIgroup = if (count _this > 6) Then {_this select 6} Else {false}
_bUseCommMoney = if (count _this > 7) Then {_this select 7} Else {false}
_this = nil

? !alive _unit || !alive _vehicle: exit
? _nonAIgroup: if !([_unit, _si, _gi] call funcCheckRearm) Then {exit}
?!_nonAIgroup && _gi == -1: _gi = giCO select _si
_timeRearm = 5
? _unit != _vehicle: _timeRearm = 30
? (_type in vDoubleRearmTime): _timeRearm = 30*2
? (_type in vTripleRearmTime): _timeRearm = 30*3
? (_type in vSixfoldRearmTime): _timeRearm = 30*6
? (_type in vTenfoldRearmTime): _timeRearm = 30*10
? dev: _timeRearm = 5
? bool_TZK_MF_Mode && _timeRearm > 30: _timeRearm = 30

_rearmData = _vehicle call funcGetRearmData
_weapons = _rearmData select 0
_mags = _rearmData select 1
? count _mags == 0: exit

_moneyComm = groupMoneyMatrix select _si select (giCO select _si)
? _nonAIgroup: goto "SkipGetMoney"
; CALC COST
? _type == -1 && _unit != _vehicle: format["ERROR: _type is -1 for _vehicle '%1' in AI_Rearm", _vehicle] call fDebugLog; exit
_money = groupMoneyMatrix select _si select _gi
# SkipGetMoney
_insufficientFond = {_this > _money && (!_bUseCommMoney || _this > _moneyComm)}
? _unit != _vehicle: goto "RearmVehicle"

#RearmInfantry
	? !_nonAIgroup: _cost = [_unit, _weapons, _mags] call funcCalcRearmCost, if(_cost call _insufficientFond) Then {exit}
	
	? !(local _vehicle): exit
	_vehicle setCombatMode "BLUE"
	~_timeRearm
	? !(alive _vehicle): _vehicle setCombatMode "YELLOW"; exit
	? !(alive _support): _vehicle setCombatMode "YELLOW"; exit
	removeAllWeapons _vehicle
	; add custom throw/put
	{ _vehicle addWeapon _x } forEach weaponsCustom
	? count (magazines _vehicle) > 0: format["ERROR: soldier '%1-%2' has mags in AI_Rearm.sqs", _vehicle, typeOf _vehicle] call fDebugLog; _vehicle setCombatMode "YELLOW"; exit
	{ _vehicle addMagazine _x } foreach _mags
	? count (weapons _vehicle) > 0: format["ERROR: soldier '%1-%2' has weapons in AI_Rearm.sqs", _vehicle, typeOf _vehicle] call fDebugLog; _vehicle setCombatMode "YELLOW"; exit
	{ _vehicle addWeapon _x } foreach _weapons
	_vehicle setCombatMode "YELLOW"
	; _vehicle selectWeapon (primaryWeapon _vehicle)
	goto "RearmEnd"

#RearmVehicle
	? !_nonAIgroup: _cost = if (_type != -1) Then {(unitDefs select _type select udCost)/10} Else {50}, if (_cost < 50) Then {_cost = 50}, _cost = _cost - (_cost % 1), if (_cost call _insufficientFond) Then {exit}

	[_vehicle] exec localize {TZK_NETWORK_REMOVE_MAG}
	; Force howitzer and tos deploy in 2.01 game
	_vehicle call preprocessFile "Util\DeployInRearm.sqf"
	~_timeRearm
	? !(alive _vehicle) || !(alive _support): exit
	? _vehicle call preprocessFile "Util\NoUseableMag.sqf": [_vehicle] exec localize {TZK_NETWORK_SEND_REARM_VEH}
	goto "RearmEnd"

#RearmEnd
	? _cost > 0 && _cost <= _money: [_si, _gi, _cost] exec localize {TZK_MONEY_SERVER_SPEND}, exit
	? _cost > 0: [_si, giCO select _si, _cost] exec localize {TZK_MONEY_SERVER_SPEND}, exit