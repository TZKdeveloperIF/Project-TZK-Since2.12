; args: [unit, si, gi, [wp, wp]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3
_wp0 = ((wpCO select _si) select (_params select 0))
_wp1 = ((wpCO select _si) select (_params select 1))

_wps = [_wp0, _wp1]
_posMove = []

_order = orderMatrix select _si select _gi; _idOrder = _order select 0; _script = (orderDefs select (_order select 1)) select 2

# WaitReady
? _unit call rtsOrderCheck: exit
~5
? _idOrder != _order select 0: exit
? _unit call busyCheck : goto "WaitReady"

_rearmData = _objRepair call funcGetRearmData
_weapons = _rearmData select 0
_mags = _rearmData select 1
_hasMines = magMine in _mags

_timeCheckSupport = time + 30 + random 60

_sleep = 30

_patrol = false

_magazines = _unit call funcGetNotEmptyMags;
_mines = "_x == magMine" count _magazines
? _hasMines && _mines == 0 : [_unit, _si, _gi, true] exec "Server\AI_CheckSupport.sqs"; _sleep = 10; goto "Sleep"

#Update

	
	? !(alive _unit) : exit
	? _idOrder != _order select 0 : exit
	? _unit call rtsOrderCheck: exit

	_vehicle = vehicle _unit
	
	? _unit != driver _vehicle : goto "Sleep"
	
	? time > _timeCheckSupport : _timeCheckSupport = time + timeCheckSupport; [_unit, _si, _gi] exec "Server\AI_CheckSupport.sqs"; _sleep = 10; goto "Sleep"
	
  ? !_hasMines : goto "Patrol"
  
  #Mine
  ? (count _posMove) == 0 : _vect = [_wp1, _wp0] call funcVectorSub; _posMove = [_wp0, [_vect, random 1] call funcVectorScale] call funcVectorAdd

	_distToDest = [getPos _unit, _posMove] call funcDistH
  
  ? _distToDest > 10 : goto "Move"
  
  ; PUT MINE
	_MineMagazine = magMine
;	? magPistolMine in _magazines : _MineMagazine = magPistolMine
	_mines = "_x == _MineMagazine" count _magazines
	doStop _unit
	_res = [ getPos _unit, siBoth, vMinerAvoid, [] ] call funcGetClosestVehicle
	? (_res select 1) > 8 : _unit fire [weaponPut, _MineMagazine, _MineMagazine]
	
	~4
	? !(alive _unit) : exit
	_minesAfter = "_x == _MineMagazine" count magazines _unit
	? _mines == 1 && _minesAfter == 1 : _unit removeMagazine _MineMagazine
	
	_magazines = _unit call funcGetNotEmptyMags;
	_mines = "_x == magMine" count _magazines
	
	_posMove = []
	? _mines == 0 : [_unit, _si, _gi, true] exec "Server\AI_CheckSupport.sqs"; _sleep = 10; goto "Sleep"
	_sleep = 2
	goto "Sleep"
	
	#Patrol
	? _unit != _vehicle && ( ([getPos _unit, _wp0] call funcDistH) < 500 || ([getPos _unit, _wp1] call funcDistH) < 500 ) : [_unit, false] exec localize {TZK_AI_STOP}; [_unit, _si, _gi] call funcWatch; _sleep = 30; goto "Sleep"
	
	? (count _posMove) == 0 : _posMove = [_wps select _patrol, 50, 100] call funcGetRandomPos
	_distToDest = [getPos _unit, _posMove] call funcDistH
  
  ? _distToDest > 10 : goto "Move"
  _posMove = []
  _patrol = !_patrol
  [_unit, false] exec localize {TZK_AI_STOP}
  [_unit, _si, _gi] call funcWatch
  _sleep = 30
  goto "Sleep"
  
  #Move
  [_unit, _posMove] call funcMoveAI
	_sleep = [30, 0.1*_distToDest] select (_distToDest < 300)
	
	#Sleep
	~_sleep
	
	? _unit call rtsOrderCheck: exit

  ? _unit call busyCheck : goto "Sleep"
	goto "Update"