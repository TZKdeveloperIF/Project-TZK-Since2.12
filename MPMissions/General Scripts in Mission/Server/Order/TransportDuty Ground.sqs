; args: [unit, si, gi, [wp, wp, dist]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3
_posPickup = wpCO select _si select (_params select 0)
_posEject = wpCO select _si select (_params select 1)
_distEject = 100*(1+(_params select 2))

_order = orderMatrix select _si select _gi; _idOrder = _order select 0; _script = orderDefs select (_order select 1) select 2

# WaitReady
	? _unit call rtsOrderCheck: exit
~5
? _idOrder != _order select 0: exit
? _unit call busyCheck: goto "WaitReady"

? !(alive _unit): exit

_sleep = 30

_timeCheckSupport = time + 30 + random 60

? _unit == vehicle _unit || _unit != driver vehicle _unit: goto "Patrol"
_type = (vehicle _unit) call funcGetUnitTypeFromObject
? _type == -1: goto "Patrol"
? !(_type in (groundTransport select _si)): goto "Patrol"

#TransportDuty
_transp = vehicle _unit
_unit disableAI "TARGET"

_distToPickup = [getPos _transp, _posPickup] call funcDistH
_crew = _transp call funcGetCargoNum
? _distToPickup > 200 && _crew > 2: goto "MoveEject"
? _distToPickup < 200 && _crew > 10: goto "MoveEject"

#MovePickup
[_transp] exec (TzkScripts select 175)
_posMove = [_posPickup, 20, 20] call funcGetRandomPos
[_unit, _posMove] call funcMoveAI
_timeRepeat = time + 60
_unit doWatch _posPickup
#MovePickup_Check
  ~10
  ? !(alive _unit): exit
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  ? !(alive _transp) || _transp != (vehicle _unit): goto "Patrol"
  ? time > _timeRepeat: [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
  ? _transp call funcGetCargoNum >= 4: goto "MoveEject"
  ? ([_posMove, getPos _transp] call funcDistH) > 200: goto "MovePickup_Check"

[_unit, _si, _gi] exec (TzkScripts select 295)
#WaitSupportDone
  ~5
  ? !(alive _unit): exit
  ? (damage _transp) < 0.1: _unit call busyClear
  ? _unit call busyCheck: goto "WaitSupportDone"
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  ? !(alive _transp) || _transp != (vehicle _unit): goto "Patrol"
? ([getPos _transp, _posPickup] call funcDistH) > 200: goto "MovePickup"

#MovePickup_WaitReady
  ; [_unit, getPos _transp] call funcMoveAI
  ~2
	? _unit call rtsOrderCheck: exit
  ? !(unitReady _unit): goto "MovePickup_WaitReady"
doStop (vehicle _unit)

#WaitForCargo
  [_transp] exec (TzkScripts select 175)
  _unit doWatch _posPickup
  ~30
  
  
  ? !(alive _unit): exit
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  ? !(alive _transp) || _transp != (vehicle _unit): goto "Patrol"
  ? _transp call funcGetCargoNum > (_transp call funcGetTranspVol) - 2 && _transp call funcGetCargoNum > 0: goto "MoveEject"
  ? _transp call funcGetCargoNum < 4: goto "WaitForCargo"
  ? _transp call funcGetCargoNum > _crew: _crew = _transp call funcGetCargoNum; goto "WaitForCargo"
  
#MoveEject
_posMove = [_posEject, 20, 20] call funcGetRandomPos
[_transp] exec (TzkScripts select 176)
[_unit, _posMove] call funcMoveAI
_unit doWatch _posEject
_timeRepeat = time + 60
#MoveEject_Check
  ~5
  
  
  ? !(alive _unit): exit
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  ? !(alive _transp) || _transp != (vehicle _unit): goto "Patrol"
  ? time > _timeRepeat: [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
  ? ([_posMove, getPos _transp] call funcDistH) > _distEject: goto "MoveEject_Check"

#MoveEject_WaitReady
  [_unit, getPos _transp] call funcMoveAI
  ~2
	? _unit call rtsOrderCheck: exit
  ? !(unitReady _unit): goto "MoveEject_WaitReady"
doStop (vehicle _unit)

#WaitStopped
  ; [_unit, getPos _transp] call funcMoveAI
  ~2
	? _unit call rtsOrderCheck: exit
  ? (speed _transp) > 5: goto "WaitStopped"

[_transp, _si] exec (TzkScripts select 078)
~10
  ? !(alive _unit): exit
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  ? !(alive _transp) || _transp != (vehicle _unit): goto "Patrol"
goto "MovePickup"


#Patrol
  ? _idOrder != _order select 0: exit
	? _unit call rtsOrderCheck: exit
  _this exec (orderDefs select orderTransportDuty select 2)
  exit

