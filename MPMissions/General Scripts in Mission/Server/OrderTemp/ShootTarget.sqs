; args: [unit, si, gi, [WayPoint, Response Radius, unit types (defined by ArtilleryMagazineSpeedList), Target, Rally Point (NONE if WayPoint undefined)], (biggerAngle)]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3; _biggerAngle = (if (count _this > 4) Then "_this select 4" Else "0")
_this = nil
; Get Correct Parameters. Need Pay Attention To Coefficients
_attackPos = ((wpCO select _si) select (_params select 0))
_radius = 5*((_params select 1) + 1)
_typeIndex = (_params select 2)
_targetIndex = (_params select 3)
_dispersion = 10*(_params select 4)

; Check Whether Unit Fits The Parameters Of The Temporary Order
_types_howitzer = +typesHowitzer; if bool_TZK_SEMod_Mode Then {_types_howitzer = _types_howitzer + types_SE_td}
; ArtilleryTypeDefs = ["Howitzer Vehicle", "Rocket Launcher", "Mortar Structure", "Howitzer Structure", "Vehicles", "Structures", "ALL"]
_typeIndex = ([{Soldier}, {Light Tank}, {Heavy Tank}] + ArtilleryTypeDefs) select _typeIndex;   _bVeh = false; _bStruct = false; _bInfantry = false
? _typeIndex == "Soldier":				_bInfantry = true; 	_orderTypes = typesInfantryAll;
? _typeIndex == "Light Tank":			_bVeh = true; 		_orderTypes = typesLightTank;
? _typeIndex == "Heavy Tank":			_bVeh = true; 		_orderTypes = typesHeavyTank;
? _typeIndex == "Howitzer Vehicle":		_bVeh = true; 		_orderTypes = _types_howitzer;
? _typeIndex == "Rocket Launcher":		_bVeh = true; 		_orderTypes = typesRocketLauncher;
? _typeIndex == "Mortar Structure":		_bStruct = true;	_orderTypes = structsOccupiableArtilleryMortar;
? _typeIndex == "Howitzer Structure": 	_bStruct = true;	_orderTypes = structsOccupiableHowitzer;
? _typeIndex == "Vehicles":				_bVeh = true;		_orderTypes = typesLightTank + typesHeavyTank + _types_howitzer + typesRocketLauncher;
? _typeIndex == "Structures":			_bStruct = true; 	_orderTypes = structsOccupiableArtilleryMortar + structsOccupiableHowitzer;
? _typeIndex == "ALL":		_bVeh = true; _bStruct = true; 	_orderTypes = typesInfantryAll + typesLightTank + typesHeavyTank + _types_howitzer + typesRocketLauncher + structsOccupiableArtilleryMortar + structsOccupiableHowitzer;

_vehicle = vehicle _unit
? !local _vehicle: exit

_target = call Format["TargetS_%1%2", _targetIndex, _si]

? _unit == _vehicle: goto "CheckInfantry"
? !_bVeh: goto "VehicleChecked"
_vt = _vehicle call funcGetUnitTypeFromObject
? _vt == -1: if !_bStruct then {exit} else {goto "VehicleChecked"}
? !(_vt in _orderTypes): exit
_bVeh = true; _bStruct = false; goto "Start"

#VehicleChecked
? !_bStruct: exit
_vt = _vehicle call funcGetStructTypeFromObject
? _vt == -1: exit
? !(_vt in _orderTypes): exit
_bVeh = false; _bStruct = true; goto "Start"

#CheckInfantry
? !_bInfantry: exit
goto "Start"

#Start
; Check Whether Unit In Another Temporary Order (Except For Set Flight Altitude, Clear Temporary Order, Etc)
? _unit call temporaryCheck: exit

; Initialize The Order Script
_timeStart = time; _timeAbort = _timeStart + 3600*6; _timeUp = _timeStart; _cycle = 30; _loop = 0
_unit call temporarySet


; Wait For Unit Finish Its Busy-Work
#WaitReady
~5
? time > _timeAbort: 	_unit call temporaryClear; exit
? !(_unit call temporaryCheck): exit
? _unit call busyCheck: goto "WaitReady"

#Update
? !_bInfantry: goto "SkipInfantry"
_magData = (_unit call funcGetRearmData) select 1
_weapons = weapons _unit; _magzines = magazines _unit
? [["M16MortarLauncher_TZK_xj400", "AK74MortarLauncher_TZK_xj400"], _magzines + _magData] call funcArrayOverlap: [_unit, _si, _gi, _attackPos, _radius, _target, _dispersion, 2, _biggerAngle] exec "Server\OrderTemp\ShootInfantry.sqs"; exit
? [["M16GrenadeLauncher_TZK_xj400", "AK74GrenadeLauncher_TZK_xj400", "M4_M203_ACOG_SD_xj400", "AK74M_GP25_1P29_SD_xj400", "MM1", "6G30"], _weapons] call funcArrayOverlap: [_unit, _si, _gi, _attackPos, _radius, _target, _dispersion, 1, _biggerAngle] exec "Server\OrderTemp\ShootInfantry.sqs"; exit
? "_x in [{HandGrenade}, {SmokeShell}, {SmokeShellGreen}, {SmokeShellRed}]" count (_magzines + _magData) > 0: [_unit, _si, _gi, _attackPos, _radius, _target, _dispersion, 0, _biggerAngle] exec "Server\OrderTemp\ShootInfantry.sqs"; exit
exit

#SkipInfantry
	? _bStruct: if (_vt in structsOccupiableArtilleryMortar && _dispersion < 60) Then {_dispersion = 60}; if (typeOf _vehicle == "m119_xj400" && _dispersion < 10) Then {_dispersion = 10}; if (typeOf _vehicle == "D30_xj400" && _dispersion < 30) Then {_dispersion = 30}; [_unit, _si, _gi, _attackPos, _radius, _target, _dispersion, _vt, _biggerAngle] exec "Server\OrderTemp\ShootStruct.sqs"; exit
	; Vehicle case here.
	? _unit != driver _vehicle: if (!isNull driver _vehicle) then {goto "Sleep"}
	if (_vt in _types_howitzer + typesRocketLauncher && _dispersion < 40) Then {_dispersion = 40}; if (typeOf _vehicle == "TOS1_TZK_xj400" && _dispersion < 60) Then {_dispersion = 60}
	[_unit, _si, _gi, _attackPos, _radius, _target, _dispersion, _vt, _biggerAngle] exec "Server\OrderTemp\ShootTank.sqs"; exit


; End Of File
#EOF
_unit call temporaryClear
exit


#Sleep
_loop = (time-_timeStart)/_cycle; _loop = 1 + _loop - _loop%1
_timeUp = _loop*_cycle + _timeStart

@ ( time > _timeUp || !(_unit call temporaryCheck) )
? !(_unit call temporaryCheck): goto "EOF"
? !(alive _unit) || time > _timeAbort: goto "EOF"
? _unit call busyCheck: goto "Sleep"
goto "Update"