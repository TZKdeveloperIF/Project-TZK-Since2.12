; args: [unit, pos, []]

_unit = _this select 0; _this = 0

? not alive _unit: exit
_vehicle = vehicle _unit
? _unit != driver _vehicle: exit
? 0 == "Helicopter" countType [_vehicle]: exit

_unit groupChat "Roger, landing helicopter."

_vehicle land {LAND}

_timeAbort = _time + 60, _maxRetryTime = 4, _retry = 0
# simpleLoop
	_vehicle land {LAND}

	? not alive _unit: exit
	? call orderCheck: exit
	? _vehicle != vehicle _unit: exit
	? _time > _timeAbort: exit

	~ 5
	? (getPos _vehicle) select 2 > 3: goto "simpleLoop"

? _unit != driver _vehicle: exit
doStop _unit; _unit action ["ENGINEOFF", _vehicle]; _vehicle engineOn false
~ 5
? (getPos _vehicle) select 2 < 5: goto "LandSucceeded"

_retry = _retry + 1
_timeAbort = _time + 60
? _retry >= _maxRetryTime: _unit groupChat "Land order aborted.", exit
goto "simpleLoop"

# LandSucceeded
	unassignVehicle _unit
	_unit action ["ENGINEOFF", _vehicle]; _vehicle engineOn false
	_unit action ["GETOUT", _vehicle]
	~ 0.1
	doStop _unit
	~ 0.1
	_unit assignAsDriver _vehicle; _unit action ["GETIN DRIVER", _vehicle]
	_unit groupChat "Landed"