; args: [unit, pos, [radius], (wp index)]

_unit = _this select 0
_pos = _this select 1
_radius = 5*( 0 + ((_this select 2) select 0) )
? count _this > 3: _pos = wpPlayer select (_this select (count _this) - 1)

? !(alive _unit): exit
? _unit != vehicle _unit: exit

_rearmData = _unit call funcGetRearmData
_weapons = _rearmData select 0
_mags = _rearmData select 1

_hasMines = false; { if (_x in _mags) then {_hasMines = true} } forEach MagzinesMine
_magazines = _unit call funcGetNotEmptyMags;
? ("_x in MagzinesMine" count _magazines) == 0 && !_hasMines: exit

_uid = [_unit, siPlayer, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "\TZK_Scripts_4_0_4\Player\Order\New.sqs"

_unit groupChat format["Roger, mining area."]

#Start
_timeAbort = time + 500*60; _timeMove = time - 1
#MoveArea
	? _pos select 0 < 0 || _pos select 1 < 0: _unit groupChat "WP not defined, order abort.", exit
	? time > _timeMove: _unit doMove _pos, _timeMove = time + 30
	~5
	? !(alive _unit) || _unit != vehicle _unit: exit
	? call orderCheck: exit
	? time > _timeAbort: _unit groupChat "Unable to reach area. Mining order aborted."; exit
	_dist = [_pos, getPos _unit] call funcDistH
	? _dist > 20: goto "MoveArea"

#MoveToNextPos
	? _pos select 0 < 0 || _pos select 1 < 0: _unit groupChat "WP not defined, order abort.", exit
	_posNext = [_pos, _radius, _radius] call funcGetRandomPos
	_unit doMove _posNext
	_timeAbort = time + 60
	#WaitUntilPosReached
		~5
		? !(alive _unit) || _unit != vehicle _unit: exit
		? call orderCheck: exit
		? time > _timeAbort: goto "MoveToNextPos"
		_dist = [_posNext, getPos _unit] call funcDistH
		? _dist > 5: goto "WaitUntilPosReached"
	goto "PlaceMine"
  
#PlaceMine
	[getPos _unit, _unit] exec "\TZK_Scripts_4_0_4\Common\CleanGround.sqs"
	~2
	? !(alive _unit): exit
	_magazines = _unit call funcGetNotEmptyMags;
	_mines = "_x in MagzinesMine" count _magazines
	? _mines == 0: goto "CheckRearm"
	_res = [ getPos _unit, siBoth, vMinerAvoid, [] ] call funcGetClosestVehicle
	? (_res select 1) < 8: _unit groupChat "Vehicle exist. Changing position."; goto "MoveToNextPos"

	_MineMagazine = magMine
	? magPistolMine in _magazines: _MineMagazine = magPistolMine
	_mines = "_x == _MineMagazine" count _magazines
	_unit fire [weaponPut, _MineMagazine, _MineMagazine]	
	~4
	? !(alive _unit): exit
	_unit groupChat "Mine Placed."

	_minesAfter = "_x == _MineMagazine" count magazines _unit
	? _mines == 1 && _minesAfter == 1: _unit removeMagazine _MineMagazine

	_magazines = _unit call funcGetNotEmptyMags;
	_mines = "_x in MagzinesMine" count _magazines
	? _mines == 0: goto "CheckRearm"
	goto "MoveToNextPos"

#CheckRearm
	? !_hasMines: exit

	_si = siPlayer
	_support = [_unit, _si, 512, true] call preprocessFile "Util\SoldierRearmSupport.sqf"
	? isNull _support: _unit groupChat "No support vehicle near. Mining order aborted."; exit

	_unit groupChat "Moving to support vehicle for more mines."

	_timeAbort = time + 15*60
	#MoveToSupport
		_posMove = [[0,5], (getDir _support)] call funcVectorRot2D
		_posMove = [getPos _support, _posMove] call funcVectorSub
		_unit doMove _posMove
		~5
		? !(alive _unit) || _unit != vehicle _unit: exit
		? call orderCheck: exit
		? !(alive _support): goto "CheckRearm"
		? time > _timeAbort: _unit groupChat "Cost too much time. Unable to reach support vehicle. Mining order aborted."; exit
		? (_unit distance _support) > 10: goto "MoveToSupport"
    
	_unit groupChat "Rearming at support vehicle."
	[_unit, _support] exec "Player\Rearm.sqs"
	~5
	? !(alive _unit): exit
	goto "Start"