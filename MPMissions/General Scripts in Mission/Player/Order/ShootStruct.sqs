; args: [unit, marker, target, structure type, dispersion, (bigger angle)]
? localize {TZK_ART_406} != "true": hint "TZK_Art_4_0_6.pbo isn't detected. Art module inactivated.", exit

_unit = _this select 0
_si = siPlayer; _uid = [_unit, _si, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "\TZK_Scripts_4_0_4\Player\Order\New.sqs"
? !(_unit in PlayerShootingUnits): PlayerShootingUnits set [_uid, _unit]

_marker = _this select 1; _target = _this select 2
_dispersion = _this select 4; _type = _this select 3
_biggerAngle = (if (count _this > 5) Then {_this select 5} Else {0})
_biggerAngle = (if (_biggerAngle > 0) then {true} else {false})

_this = 0




_quitCond = {call orderCheck || not alive _unit || _vehicle != vehicle _unit}




_vehicle = vehicle _unit; _typeName = typeOf _vehicle; _script = "Common\EH\Fired_Art_406.sqs"
? _biggerAngle: _heliH = typeOf _target camCreate [0,0,0]
# CheckDistance
	_distLimit = viewDistance; _hint = "Target is out of the structure's ability. Order aborted."
	? upgMatrix select _si select upgLongWeaponRange == 2: _distLimit = 2*viewDistance; _hint = "Target is outside 2xviewDistance. Order aborted."
	; ? _type in structsOccupiableMortar: _distLimit = viewDistance/13*8; _distLimit = _distLimit - _distLimit % 1; _hint = format ["Mortar structure is limited within %1 meters since TZK_4.0.4.07.", _distLimit]
	? _unit distance _target > _distLimit: _unit groupChat _hint; goto "EOF"
	? _unit distance _target < _distLimit && _unit distance _target > viewDistance: _unit groupChat "Target is far. Probably missing."
	? _unit distance _target < 50: _unit groupChat "Target too close. This will be suicide. Order aborted."; goto "EOF"

; PrepareToMove













# PrePareToAttack
	; weapon check unnecessary for struct. They're always use first weapon defined in CONFIG.CPP as main gun.
	_unit groupChat "Prepare to attack.";
	; doStop _unit
	_vehicle reveal _target
	_vehicle doTarget _target
	
	_delay = 3
	; Delay for turning the turret. It'll be good to obtain proper value by the angle's difference, however no way to compute this in OFP.

	~ _delay
	
	_weapon = (_vehicle call funcVehParamWeapons) select 0
	? !(_vehicle hasWeapon _weapon): _unit groupChat "No proper weapon. Order aborted. Rearm me or help me to deploy, sir."; goto "EOF"
	_weapons = (weapons _vehicle) - [_weapon]; {_vehicle removeWeapon _x} forEach _weapons; {_vehicle addWeapon _x} forEach _weapons
# PreCalculate
	_ammoArray = _vehicle ammoArray _weapon
	? count _ammoArray == 0: _unit groupChat "No available magazine. Order aborted. Rearm me please, sir."; goto "EOF"
	; The applying of "_ammoOld" will invalid magazines containing only 1 shot. If wish to use such a magazine, adjust this script manually.
	_equippedMag = _ammoArray select 0, _ammoOld = _ammoArray select 1
	? _equippedMag == "": goto "EOF"

	_bAvoidStruct = 50 + _dispersion > ([getPos _target, _si] call loadFile "Common\SQF\ClosestEnemyCritcalStruct.sqf") select 1
	? _bAvoidStruct: _unit groupChat "Banned in shooting structure directly."; goto "EOF"
	? _unit distance _target > _distLimit: goto "CheckDistance"

	; _magazines = _vehicle call funcGetNotEmptyMags; _validMags = [_weapon] call funcWeaponValidMags
	_posV = getPosASL _vehicle; _posT = getPosASL _target; _posT set [2, _posT call funcHASL]
	_speed = call format ["%1", _equippedMag GetWeaponParam "initSpeed"]
	; special correct for Mortar structure
	if (200 == _speed) then {_speed = 120}

	_calc = [_posV, _posT, _speed, _biggerAngle] call funcCalcArt406
	? 180 > _calc: _elev = _calc; goto "ResObtained"
	_calc = _calc - 180

	_bit = _calc % 2
	? _bit > 0: _unit groupChat format ["Invalid initSpeed: %1. Switch another magazine please.", _speed]; goto "EOF"
	_calc = _calc - _bit
	_bit = _calc % 4
	? _bit > 0: _unit groupChat "Invalid delta height or distance. Reassign the target please."; goto "EOF"
	_calc = _calc - _bit
	_bit = _calc % 8
	? _bit > 0: _unit groupChat "Current parameters can't hit the target. Adjust the target or switch another mag please."; goto "EOF"
	_unit groupChat "unexpected case."; goto "EOF"

# ResObtained
	; Calculate turbulence
	; 用弧长除以半径获得方位角的范围; 考虑散布范围的最近点，计算命中它所需的角度，以修正量作为俯仰角的扰动范围
	_angle = ((_posT select 1) - (_posV select 1)) atan2 ((_posT select 0) - (_posV select 0));
	_distX = [_posV, _posT] call funcDistH
	_angleDelta = (_dispersion/2)/_distX * 180/pi
	_vector = [_posT, _posV] call funcVectorSub
	_nearestPoint = [_posT, [_vector, - _dispersion/_distX] call funcVectorScale] call funcVectorAdd
	_nearestPoint set [2, _nearestPoint call funcHASL]
	_calc = [_posV, _nearestPoint, _speed, _biggerAngle] call funcCalcArt406
	? _calc >= 180: _angleDelta = 0, _thetaDelta = 0
	? _calc < 180: _thetaDelta = abs(_calc - _elev)
	; 当载具的位置发生了变化 (变化10米以上), 或目标的位置发生了变化, 或弹夹发生了切换, 需要重新回到试射环节.

	; outer variables for attack loop
	_delay = 0
	; No reload magazine check. Structures are always local to server so they won't reload mags manually. And TZK equip only 1 mag to each structure.
# AttackCheck
	? 10 < [_vehicle, _posV] call funcDistH || 10 < [_target, _posT] call funcDistH: goto "PreCalculate"
	_currentMag = _equippedMag
	? _unit distance _target > _distLimit: goto "CheckDistance"
	? _biggerAngle: _posH = [_posT, _posV] call funcVectorSub, _posH set [2, 0], _length = _posH call funcVectorLength, _posH = [_posH, 600/_length] call funcVectorScale, _posH set [2, 600 * 1.732], _posH = [_posH, _posV] call funcVectorAdd, _heliH setPosASL _posH

	_vehicle reveal (if _biggerAngle then {_heliH} else {_target})
	~0.1
	_vehicle doTarget (if _biggerAngle then {_heliH} else {_target})

	~0.1
	? call _quitCond: goto "EOF"
	? _vehicle knowsAbout _target < 0.01: _unit groupChat "Can't locate the target. Order Aborted. Help me spot it again please."; goto "EOF"

	? 0 == _ammoOld: _magazines = _vehicle call funcGetNotEmptyMags; _validMags = [_weapon] call funcWeaponValidMags; if ({_x in _validMags} count _magazines == 0) then {goto "CheckRearm"};

	; _ammoArray is initialized before the loop and updated after having shot while before next loop delay
	? count _ammoArray == 0: _unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "EOF"
	_currentMag = _ammoArray select 0
	? _currentMag != _equippedMag: goto "PreCalculate"

	; no way in 2.01 to know when will a mag is loaded. Force shoot and wait until shooting actually happen using "_ammoOld"
	~ _delay
	? call _quitCond: goto "EOF"
	; ASSERT(count _ammoArray > 0)
	? not local gunner _vehicle: _delay = 5; goto "AttackCheck"
	? "BLUE" == combatMode _vehicle || "GREEN" == combatMode _vehicle: _delay = 5; goto "AttackCheck"
	; ? 1 == _ammoOld: _reloadMagazine = true

	_ehRev = _vehicle addEventHandler ["Fired",""], _vehicle removeEventHandler ["Fired", _ehRev]
	_vehicle addEventHandler ["Fired", format [{[_this, %1, %2, %3, %4] exec "%5"}, _speed, _angle - _angleDelta + _angleDelta*(random 2), _elev - _thetaDelta + _thetaDelta*(random 2), _ehRev, _script] ]
	_vehicle fire _weapon

	# w8UntilShooted
		_counter = 0
		~ 1
		_ammoArray = _vehicle ammoArray _weapon
		? 0 == count _ammoArray: _unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "EOF"
		? call _quitCond: goto "EOF"
		_counter = _counter + 1
		? _counter >= 30: _unit groupChat "Verify whether my main weapon is loaded, sir. If weapon is ready then reorder me and report a bug to script designer.", _counter = 0
		? _ammoArray select 1 == _ammoOld && _ammoOld != 1: goto "w8UntilShooted"

	_ammoOld = _ammoArray select 1
	_delay = (call format ["%1", (_ammoArray select 0) GetWeaponParam "reloadTime"]) * 1.1 + 0.5
	; ? _reloadMagazine: _delay = (call format ["%1", _weapon GetWeaponParam "magazineReloadTime"]) + _delay; _reloadMagazine = false
	_delay = _delay - 1;

	; AttackDone
	~ 0.1
	if _biggerAngle then {_vehicle doWatch _posH} else {_vehicle doWatch _posT}
	goto "AttackCheck"
# CheckRearm
	_vs = [getPos _unit, 50, (typesSupport select si0) + (typesSupport select si1) + [(typesMHQ select _si)], []] call funcGetNearbyVehicles
	? count _vs == 0 : _unit groupChat "No support vehicle within 50 meters. Magazines exhausted. Order aborted."; goto "EOF"
	_sup = (_vs select 0) select 0
	_speed = -1; _mag = "";
	? !bool_TZK_199_Mode: _magazines = magazines _vehicle; _validMags = [_weapon] call funcWeaponValidMags; {if (_x in _validMags) Then {_mag = _x}} forEach _magazines
	? _mag != "": _speed = substr [_mag, sizeofstr(_mag) - sizeofstr("xxxx_xj400"), sizeofstr(_mag) - sizeofstr("_xj400")]; if !(substr [_speed, 0, 1] in ["0","1","2","3"]) then {_speed = -1} else {_speed = call _speed};
	_delay = [0,3] select (_speed > 0)
	_unit groupChat "Rearming at support vehicle. If I'm far away from you, probably I can't receive supplemented magazines. In this case, please use Unit Camera and look at me."; [_unit, _sup] exec "Player\Rearm.sqs"; doStop _unit
	# WaitRearmComplete
		~5
		? call _quitCond: goto "EOF"
		? !someAmmo _vehicle: goto "WaitRearmComplete"
	~_delay + 1
	? _speed <= 0: goto "PrePareToAttack"
	_delay = 1; [_vehicle, _speed] exec localize {TZK_FUNC_SWITCH_MAG_PRESET}; _unit groupChat "Switching magazine. Again, if I'm far away, use Unit Camera and look at me."
	# WaitSwitchComplete
		~_delay
		? call _quitCond: goto "EOF"
		_delay = 5
		? !someAmmo _vehicle: goto "WaitSwitchComplete"
	goto "PrePareToAttack"

# EOF
PlayerShootingUnits set [_uid, objNull]
? _biggerAngle > 0: deleteVehicle _heliH
exit