; args: [unit, pos, [wp, wp]]

_unit = _this select 0
_pos = _this select 1
_wp0 = (wpPlayer select (_this select 2 select 0))
_wp1 = (wpPlayer select (_this select 2 select 1))

? !(alive _unit): exit
? _unit != vehicle _unit: exit

_rearmData = _unit call funcGetRearmData
_weapons = _rearmData select 0
_mags = _rearmData select 1
_hasMines = false; { if (_x in _mags) then {_hasMines = true} } forEach MagzinesMine
_magazines = _unit call funcGetNotEmptyMags;
? ("_x in MagzinesMine" count _magazines) == 0 && !_hasMines: exit

_dist = [_wp0, _wp1] call funcDistH
? _dist > 500: _unit groupChat "WPs to far apart (max 500m)."; exit

_unit groupChat format["Roger, placing mines between waypoints."]

_uid = [_unit, siPlayer, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "\TZK_Scripts_4_0_4\Player\Order\New.sqs"

_i = -1
_c = _dist/10
? _c == 0: _c = 0.5

#MoveToNextPos
? (_wp0 select 0) == -1 || (_wp1 select 0) == -1: _unit groupChat "WPs not defined"; exit
_vect = [_wp1, _wp0] call funcVectorSub
_i = _i + 1
? _i > _c: _i = 0
_pos = [_wp0, [_vect, _i/_c] call funcVectorScale] call funcVectorAdd
_unit doMove _pos
_timeAbort = time + 500*60
#CheckPosReached
  ~5
  ? !(alive _unit) || time > _timeAbort  || _unit != vehicle _unit: exit
  ? call orderCheck: exit
  ? ([_pos, getPos _unit] call funcDistH) > 10: goto "CheckPosReached"

#PlaceMine
  [getPos _unit, _unit] exec "\TZK_Scripts_4_0_4\Common\CleanGround.sqs"
  ~2
  ? !(alive _unit): exit
  
	_magazines = _unit call funcGetNotEmptyMags;
	_mines = "_x in MagzinesMine" count _magazines
  ? _mines == 0: goto "CheckRearm"
  _res = [ getPos _unit, siBoth, vMinerAvoid, [] ] call funcGetClosestVehicle
  ? (_res select 1) < 8: _unit groupChat "Vehicle exist. Changing position."; goto "MoveToNextPos"
  
	_MineMagazine = magMine
	? magPistolMine in _magazines: _MineMagazine = magPistolMine
	_mines = "_x == _MineMagazine" count _magazines
	_unit fire [weaponPut, _MineMagazine, _MineMagazine]
	~4
	? !(alive _unit): exit
	_unit groupChat "Mine Placed."
	
  _minesAfter = "_x == _MineMagazine" count magazines _unit
  ? _mines == 1 && _minesAfter == 1: _unit removeMagazine _MineMagazine
  
	_magazines = _unit call funcGetNotEmptyMags;
	_mines = "_x in MagzinesMine" count _magazines
	? _mines == 0: goto "CheckRearm"
  goto "MoveToNextPos"

#CheckRearm
	? !_hasMines: exit

	_si = siPlayer
	_support = [_unit, _si, 512, true] call preprocessFile "Util\SoldierRearmSupport.sqf"
	? isNull _support: _unit groupChat "No support vehicle near. Mining order aborted."; exit

	_unit groupChat "Moving to support vehicle for more mines."

	_timeAbort = time + 15*60
	#MoveToSupport
		_posMove = [[0,5], (getDir _support)] call funcVectorRot2D
		_posMove = [getPos _support, _posMove] call funcVectorSub
		_unit doMove _posMove
		~5
		? !(alive _unit) || _unit != vehicle _unit: exit
		? call orderCheck: exit
		? !(alive _support): goto "CheckRearm"
		? time > _timeAbort: _unit groupChat "Cost too much time. Unable to reach support vehicle. Mining order aborted."; exit
		? (_unit distance _support) > 10: goto "MoveToSupport"

	_unit groupChat "Rearming at support vehicle."
	[_unit, _support] exec "Player\Rearm.sqs"
	~5
	? !(alive _unit): exit
	goto "MoveToNextPos"