; args: [unit, marker, target, vehicle type, dispersion, (bigger angle)]
_unit = _this select 0
_si = siPlayer; _uid = [_unit, _si, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "\TZK_Scripts_4_0_4\Player\Order\New.sqs"
? !(_unit in PlayerShootingUnits): PlayerShootingUnits set [_uid, _unit]

_marker = _this select 1; _target = _this select 2
_dispersion = _this select 4; _type = _this select 3
_biggerAngle = (if (count _this > 5) Then {_this select 5} Else {0})
? bool_TZK_SEMod_Mode: if (_type in (types_SE_td + typesRocketLauncher)) Then {_this exec "Extra\Shoot_TD_Player.sqs", exit}
_this = 0
; big angle will be invalid when ordering tanks.
? _type in (typesLightTank + typesHeavyTank): _biggerAngle = 0;








_vehicle = vehicle _unit; _typeName = typeOf _vehicle; _script = "Common\EH\Fired_ReviseShellDir.sqs"
? _biggerAngle > 0: _heliH = typeOf _target camCreate [0,0,0]; _script = "Common\EH\Fired_ReviseShell_BigAngle.sqs"
#CheckDistance
_posOrdered = getPos _vehicle; _distLimit = viewDistance; _hint = "Target is outside viewDistance. Order aborted."
? upgMatrix select _si select upgLongWeaponRange == 2 || upgMatrix select _si select upgLongArtRange == 2: _hint = "Since TZK_4.0.3.02 Mission, a new upgrade item ""Artillery Long Range"" is added. One must upgrade both Weapon Range and Art Range if wish to extend the range of Artillery Module. Order aborted."
? upgMatrix select _si select upgLongWeaponRange == 2 && upgMatrix select _si select upgLongArtRange == 2: _distLimit = 2*viewDistance; _hint = "Target is outside 2xviewDistance. Order aborted."
? _typeName in ["M1A1_Art_xj400", "T80_Art_xj400"]: _distLimit = 10000; _hint = "Target is very far. Probably can't hit it directly."
? _unit distance _target > _distLimit: _unit groupChat _hint; goto "EOF"
? _unit distance _target < _distLimit && _unit distance _target > viewDistance: _unit groupChat "Target is far. Probably missing."
#PrepareToMove
; For player controlled tanks, the order will directly use its current position as shooting position. This position is restored only for return after having rearmed.

? ([getPos _unit, _posOrdered] call funcDistH) < 30: _unit doMove _posOrdered, goto "PrePareToAttack"
_unit groupChat "Moving to attacking position."; _timeStart = time; _timeHint = _timeStart + 5*60; 
_hint = ["I've been running for %1 minutes. Distance %2 meters now.", (_timeHint -_timeStart)/60, (_unit distance _target) - (_unit distance _target)%1]
? _typeName in ["TOS1_TZK_xj400", "M109A6G_xj400", "PLZ05_TZK_xj400"] && "_x == {DeploySwitch_xj400}" count magazines _vehicle > 0: [_vehicle, 0] exec "\TZK_Scripts_4_0_4\Common\Effect\DeployChange.sqs"


#CheckPosReached


	_unit doMove _posOrdered
	~5
	? call orderCheck: goto "EOF"
	? !(alive _unit) || _vehicle != vehicle _unit: goto "EOF"
	? ([getPos _unit, _posOrdered] call funcDistH) > 30: goto "CheckPosReached"
	? time > _timeHint: hint format _hint; _timeHint = _timeHint + 5*60
#PrePareToAttack
	; weapon check unnecessary for tank. They're always use first weapon defined in CONFIG.CPP as main gun.
	_unit groupChat "In position. Prepare to attack.";
	driver _vehicle action ["ENGINE OFF", _vehicle]; _vehicle engineOn false
	_vehicle reveal _target
	_vehicle doTarget _target
	
	_delay = 3
	; Delay for turning the turret. It'll be good to obtain proper value by the angle's difference, however no way to compute this in OFP.
	? _typeName in ["TOS1_TZK_xj400", "M109A6G_xj400", "PLZ05_TZK_xj400"]: [_vehicle, 1] exec "\TZK_Scripts_4_0_4\Common\Effect\DeployChange.sqs"; _delay = [5, 8] select ("_x == {DeploySwitch_xj400}" count magazines _vehicle == 0)
	~ _delay
	
	_weapon = (_vehicle call funcVehParamWeapons) select 0
	? !(_vehicle hasWeapon _weapon): _unit groupChat "No proper weapon. Order aborted. Rearm me or help me deploy, sir."; goto "EOF"
	_weapons = (weapons _vehicle) - [_weapon]; {_vehicle removeWeapon _x} forEach _weapons; {_vehicle addWeapon _x} forEach _weapons
	_reloadMagazine = false
	_ammunition = -1
	; The applying of "_ammunition" will invalid magazines containing only 1 shot. If wish to use such a magazine, adjust this script manually.
#PreCalculate
; 单位移动到位, 且武器检查完毕（弹夹不检查, 因为速度可能需要调整）后, 进行预计算. 所需的空间信息已知, 而弹夹速度还未知. 采用矩阵记录信息的方式, 获取有效弹夹及相应的速度. 
; 预计算如果得不到合适的结果, 则设置弹夹的切换, 或终止命令.

; In OFP no vanilla way to obtain direction of turret. Initial angle is 30° or 60°. In pre-calculating we iterate mostly elevation angle.
_bAvoidStruct = 50 + _dispersion > ([getPos _target, _si] call loadFile "Common\SQF\ClosestEnemyCritcalStruct.sqf") select 1 && _type in typesHowitzer
? _bAvoidStruct: _unit groupChat "Banned in shooting structure directly."; goto "EOF"

_posV = getPosASL _vehicle; _posT = getPosASL _target; _posT set [2, _posT call funcHASL]
_elev = if(_biggerAngle > 0) then "60" else "30"
? _unit distance _target > _distLimit: goto "CheckDistance"

_magazines = _vehicle call funcGetNotEmptyMags; _validMags = [_weapon] call funcWeaponValidMags; _equippedMag = ""; _i = 0
while "_i < count _magazines" do "if((_magazines select _i) in _validMags) then {_equippedMag = _magazines select _i}; _i = _i + 1;"
? _equippedMag == "": goto "EOF"
_i = TZK_MagName find _equippedMag
? _i == -1: goto "EOF"
_speed = TZK_MagInfo_Speed select _i

@ !mutexTzkArtModule
	mutexTzkArtModule = true
	_res = [ [_vehicle, _weapon, ""], _posT, _speed, _elev, _biggerAngle ] call preprocessFile "Common\Art\PreCalcArtInfo.sqf"
	~ 0.1
	mutexTzkArtModule = false
; _res format: [bool acceptable return value, _elev, _speed]
? _res select 0 != 0: _unit groupChat "Target is too " + (["", "far", "high"] select (_res select 0)) + " for this magazine. Use another one with bigger speed please."; goto "EOF"
_elev = _res select 1; _speed = _res select 2
; Calculate turbulence
; 切向简单地用弧长除以半径就能获得方位角的范围; 径向则需要针对修正值做一次迭代, 节省运算量的做法是对于[r,R]的范围, 仅计算r的修正, 将修正量取反作为R的近似值.
_angle = ((_posT select 1) - (_posV select 1)) atan2 ((_posT select 0) - (_posV select 0)); 
_distX = [_posV, _posT] call funcDistH
_angleDelta = (_dispersion/2)/_distX * 180/pi
_thetaDelta = 1
_r0_r1_bH = [_speed * cos(_elev + _thetaDelta), _speed * sin(_elev + _thetaDelta), (_posT call funcHASL) - (_posV select 2), false] call loadFile "Common\EH\RK4_Range_H.sqf"
_error = (_r0_r1_bH select 1) - _distX
? _error != 0: _thetaDelta = _thetaDelta * _dispersion / abs(_error)
_script = "Common\EH\Fired_ReviseAsAssigned.sqs"
; 当载具的位置发生了变化(距离计算使用的位置超出50米), 或目标的位置发生了变化, 或弹夹发生了切换, 需要重新回到试射环节.
; hint format ["%1", [_elev, _speed, _angle, _angleDelta, _thetaDelta]]
	#AttackCheck
		_currentMag = _equippedMag; _i = -1
		? _unit distance _target > _distLimit: goto "CheckDistance"
		? _biggerAngle > 0: _posH = [_posT, _posV] call funcVectorSub, _posH set [2,1], _length = _posH call funcVectorLength, _posH = [_posH, 600/_length] call funcVectorScale, _posH set [2, 6*173.2], _posH = [_posH, getPos _vehicle] call funcVectorAdd, _heliH setPos _posH, _vehicle reveal _heliH
		_vehicle reveal (if (_biggerAngle > 0) then "_heliH" else "_target")
		~0.1
		_vehicle doTarget (if (_biggerAngle > 0) then "_heliH" else "_target")
		_magazines = _vehicle call funcGetNotEmptyMags; _ammoOld = _vehicle ammo _weapon
		? _ammoOld == 0: if ("_x in _validMags" count _magazines == 0) Then {goto "CheckRearm"};
		; delay must be correctly assigned for "fire" command.
		if !bool_TZK_199_Mode then {_ammoArray = _vehicle ammoArray _weapon; if(count _ammoArray > 0) then {_delay = call format ["%1", (_ammoArray select 0) GetWeaponParam "reloadTime"]*1.2 + 1} else {_delay = call format ["%1", (_validMags select 0) GetWeaponParam "reloadTime"] + 1} } else {_i = TZK_MagName find _currentMag; if(_i != -1) then {_delay = (TZK_MagInfo_Reload select _i select 0) * 1.2 + 1} else "_delay = 8"}
		~0.1
		? _reloadMagazine: _delay = (if !bool_TZK_199_Mode then {call format ["%1", _weapon GetWeaponParam "magazineReloadTime"]} else {if(_i != -1) then {_delay = TZK_MagInfo_Reload select _i select 1} else "5"}) + _delay; _reloadMagazine = false
		~ _delay
		? call orderCheck : goto "EOF"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "EOF"
		? _vehicle knowsAbout _target < 0.01: _unit groupChat "Can't locate the target. Order Aborted. Help me spot it again please."; goto "EOF"
		
		_currentMag = ""; _i = 0; while "_i < count _magazines" do "if((_magazines select _i) in _validMags) then {_currentMag = _magazines select _i}; _i = _i + 1;"
		? _currentMag != _equippedMag: goto "PreCalculate"
		? 50 < [_vehicle, _posV] call funcDistH || 50 < [_target, _posT] call funcDistH: goto "PreCalculate"
		
		? bool_TZK_199_Mode: goto "CheckFire_ACWA"
			_ammoArray = _vehicle ammoArray _weapon
			? count _ammoArray > 0 && local gunner _vehicle: if (_ammoArray select 1 == 1) Then {_reloadMagazine = true}; if (_ammoArray select 1 > 0) Then {if ((_ammoArray select 1 != _ammunition) || (_ammoArray select 1 == 1)) Then {_ammunition = _ammoArray select 1; _ehRev = _vehicle addEventHandler ["Fired",""], _vehicle removeEventHandler ["Fired", _ehRev], _vehicle addEventHandler [ "Fired", format [{[_this, %1, %2] exec "%3"}, [_speed, _angle - _angleDelta + _angleDelta*(random 2), _elev - _thetaDelta + _thetaDelta*(random 2)], _ehRev, _script] ], _vehicle fire _weapon}} else { _unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "EOF" }
			? count _ammoArray == 0: _unit groupChat "Order Aborted. Help me ""Reload"" the magazine (via 6-action list) before ask me shoot again."; goto "EOF"
			goto "AttackDone"
		#CheckFire_ACWA
			_ammoNow = _vehicle ammo _weapon
			? _ammoNow > 0: if (_ammoNow == 1) Then {_reloadMagazine = true}; if (_ammoNow != _ammunition || _ammoNow == 1) Then {_ammunition = _ammoNow, _ehRev = _vehicle addEventHandler ["Fired",""], _vehicle removeEventHandler ["Fired", _ehRev], _vehicle addEventHandler [ "Fired", format [{[_this, %1, %2] exec "%3"}, [_speed, _angle - _angleDelta + _angleDelta*(random 2), _elev - _thetaDelta + _thetaDelta*(random 2)], _ehRev, _script] ], _vehicle fire _weapon}
			? _ammoNow == 0: if (_ammoOld == 0) Then {goto "EOF"}
		
		#AttackDone
		~0.1
		if (_biggerAngle > 0) Then "_vehicle doWatch _posH" Else "_vehicle doWatch _posT"
	goto "AttackCheck"
#CheckRearm
	_vs = [getPos _unit, 1500, (typesSupport select si0) + (typesSupport select si1) + [(typesMHQ select _si)], []] call funcGetNearbyVehicles
	? count _vs == 0: _unit groupChat "No support vehicle within 1500 meters. Magazines exhausted. Order aborted."; goto "EOF"
	_distMin = 1500; _sup = objNull
	{ _dist = _unit distance (_x select 0); if (_dist < _distMin) Then { _sup = (_x select 0); _distMin = _dist } } foreach _vs
	? isNull _sup: _unit groupChat "No support vehicle near. Magazines exhausted. Order aborted."; goto "EOF"
	_unit groupChat "Moving to support vehicle for more magazines."

	_timeAbort = time + 15*60
	? _typeName in ["TOS1_TZK_xj400", "M109A6G_xj400", "PLZ05_TZK_xj400"] && "_x == {DeploySwitch_xj400}" count magazines _vehicle > 0: [_vehicle, 0] exec "\TZK_Scripts_4_0_4\Common\Effect\DeployChange.sqs"
	#MoveToSupport
		_posMove = [[0,25], (getDir _sup)] call funcVectorRot2D
		_posMove = [getPos _sup, _posMove] call funcVectorSub
		_unit doMove _posMove
		~5
		? call orderCheck: goto "EOF"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "EOF"
		? !(alive _sup): goto "CheckRearm"
		? time > _timeAbort: _unit groupChat "Cost too much time. Unable to reach support vehicle. Order aborted."; goto "EOF"
		? (_unit distance _sup) > 30: goto "MoveToSupport"
	_speed = -1; _mag = "";
	? !bool_TZK_199_Mode: _magazines = magazines _vehicle; _validMags = [_weapon] call funcWeaponValidMags; {if (_x in _validMags) Then {_mag = _x}} forEach _magazines
	? _mag != "": _speed = substr [_mag, sizeofstr(_mag) - sizeofstr("xxxx_xj400"), sizeofstr(_mag) - sizeofstr("_xj400")]; if !(substr [_speed, 0, 1] in ["0","1","2","3"]) then {_speed = -1} else {_speed = call _speed};
	_delay = [0,3] select (_speed > 0)
	_unit groupChat "Rearming at support vehicle. If I'm far away from you, probably I can't receive supplemented magazines. In this case, please use Unit Camera and look at me."; [_unit, _sup] exec "Player\Rearm.sqs"; doStop _unit
	#WaitRearmComplete
		~5
		? call orderCheck: goto "EOF"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "EOF"
		? !someAmmo _vehicle: goto "WaitRearmComplete"
	~ _delay + 1
	? _speed <= 0: goto "PrepareToMove"
	_delay = 1; [_vehicle, _speed] exec "\TZK_Scripts_4_0_4\Common\ReEquip\SwitchMagPreset.sqs"; _unit groupChat "Switching magazine. Again, if I'm far away, use Unit Camera and look at me."
	#WaitSwitchComplete
		~ _delay
		? call orderCheck : goto "EOF"
		? !(alive _unit) || _vehicle != vehicle _unit : goto "EOF"
		_delay = 5
		? !someAmmo _vehicle: goto "WaitSwitchComplete"
	goto "PrepareToMove"

#EOF
PlayerShootingUnits set [_uid, objNull]
? _biggerAngle > 0: deleteVehicle _heliH
exit