; args: [[_id, _idx], [_pos1, _pos2, _horizontalPos1, _horizontalPos2], [_si, _midBridgeCnt, _segmentCnt, _buildBeginDummy, _buildEndDummy]]
_id = _this select 0 select 0; _idx = _this select 0 select 1

_pos1 = _this select 1 select 0; _pos2 = _this select 1 select 1
_horizontalPos1 = _this select 1 select 2; _horizontalPos2 = _this select 1 select 3

_si = _this select 2 select 0
_midBridgeCnt = _this select 2 select 1
_segmentCnt = _this select 2 select 2
_buildBeginDummy = _this select 2 select 3
_buildEndDummy = _this select 2 select 4

_funcGenerator = preprocessFile "Bridge\InfoFunc.sqf"
; add project info
	? isServer: goto "ProjectInfoAdded"

	_headInfo = []
	[_headInfo, true] call ("SetValidStatus" call _funcGenerator)
	[_headInfo, _id] call ("SetId" call _funcGenerator)
	[_headInfo, _si] call ("SetSi" call _funcGenerator)
	[_headInfo, _segmentCnt] call ("SetSegmentCnt" call _funcGenerator)
	_bridgesInfo = []
	TzkBrdigeProjects set [_idx, [_headInfo, _bridgesInfo]]

# ProjectInfoAdded
	_project = TzkBrdigeProjects select _idx
	; redirect local reference variables
	_headInfo = _project select 0
	_bridgesInfo = _project select 1

	[_headInfo, _pos1] call ("SetBeginPos" call _funcGenerator)
	[_headInfo, _pos2] call ("SetEndPos" call _funcGenerator)

; bridge constants
	_bridgeL = 50, _correct = TzkBridgeRoadwayH - TzkBridgeCenterH

; generate detail info
	_distance = ([_horizontalPos2, _horizontalPos1] call funcVectorSub) call funcVectorLength
	;  format ["_segmentCnt: %1, _buildBeginDummy: %2, _buildEndDummy: %3, pos: %4, _midBridgeCnt: %5, _distance: %6", _segmentCnt, _buildBeginDummy, _buildEndDummy, [_horizontalPos1, _horizontalPos2], _midBridgeCnt, _distance]

	_bridgesInfo resize (3 * _segmentCnt)

	_segmentIdx = 0
	_funcUnitVector = preprocessFile "Math\UnitVector.sqf"
	_funcGetObjectCenter = preprocessFile "Bridge\ObjCenterPosASL.sqf"

	? not _buildBeginDummy: goto "FinishBeginDummy"
	; Begin Dummy
		_beginDummyUnitVector = ([_horizontalPos1, _pos1] call funcVectorSub) call _funcUnitVector
		_roadwayCenter = [_horizontalPos1, [_beginDummyUnitVector, _bridgeL * - 0.5] call funcVectorScale] call funcVectorAdd
		_objectCenter = [_beginDummyUnitVector, _roadwayCenter, _correct] call _funcGetObjectCenter

		_bridgesInfo set [3 * _segmentIdx + 0, _objectCenter]
		_bridgesInfo set [3 * _segmentIdx + 1, _beginDummyUnitVector]
		_bridgesInfo set [3 * _segmentIdx + 2, objNull]

		_segmentIdx = _segmentIdx + 1

	# FinishBeginDummy

	_step = _distance / _midBridgeCnt
	_midSegmentUnitVector = ([_horizontalPos2, _horizontalPos1] call funcVectorSub) call _funcUnitVector

	_midSegmentIdx = 0
	# SlopeStage
		_centerCorrection = _step * (_midSegmentIdx + 0.5)
		; no correction for first/last stage to ensure continuous if dummy required
		? 0 == _midSegmentIdx: _centerCorrection = _bridgeL * 0.5
		? _midBridgeCnt - 1 == _midSegmentIdx: _centerCorrection = _distance - _bridgeL * 0.5

		_roadwayCenter = [_horizontalPos1, [_midSegmentUnitVector, _centerCorrection] call funcVectorScale] call funcVectorAdd
		_objectCenter = [_midSegmentUnitVector, _roadwayCenter, _correct] call _funcGetObjectCenter

		_bridgesInfo set [3 * _segmentIdx + 0, _objectCenter]
		_bridgesInfo set [3 * _segmentIdx + 1, _midSegmentUnitVector]
		_bridgesInfo set [3 * _segmentIdx + 2, objNull]

		_segmentIdx = _segmentIdx + 1

		_midSegmentIdx = _midSegmentIdx + 1;
		? _midSegmentIdx < _midBridgeCnt: goto "SlopeStage"

	? not _buildEndDummy: goto "FinishEndDummy"
		_endDummyUnitVector = ([_pos2, _horizontalPos2] call funcVectorSub) call _funcUnitVector
		_roadwayCenter = [_horizontalPos2, [_endDummyUnitVector, _bridgeL * 0.5] call funcVectorScale] call funcVectorAdd;
		_objectCenter = [_endDummyUnitVector, _roadwayCenter, _correct] call _funcGetObjectCenter

		_bridgesInfo set [3 * _segmentIdx + 0, _objectCenter]
		_bridgesInfo set [3 * _segmentIdx + 1, _endDummyUnitVector]
		_bridgesInfo set [3 * _segmentIdx + 2, objNull]

		_segmentIdx = _segmentIdx + 1

	# FinishEndDummy

; server will manage the bridge
? isServer: _project exec "Bridge\ServerManaging.sqs"