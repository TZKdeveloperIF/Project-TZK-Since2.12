; ---------------------------------------------------------------------------------------------------
; |									RTS Cross Bridge SQS Script										|
; |		  Units will try cross the assigned bridge. 												|
; ---------------------------------------------------------------------------------------------------

; args: [
; 	[unit, Diagonal Pos Info (read only), bridge1, bridge2],
; 	[order mode (called by AI or player unit), quit condition],
; 	extra parameters for order mode
; ]
_param = _this select 0

_unit = _param select 0
_pos1 = _param select 1 select 0; _pos2 = _param select 1 select 1
_bridge1 = _param select 2; _bridge2 = _param select 3

_forServer = _this select 1 select 0, _quitCond = _this select 1 select 1
? _forServer: _rtsStatus = _this select 2 select 0, _id = _this select 2 select 1
? not _forServer: _uid = _this select 2 select 0, _id = _this select 2 select 1

_msg = ""

? _unit == vehicle _unit: exit
? _unit != driver vehicle _unit: exit

? [_unit, _bridge1] call funcDistH > 50 + 25: _unit groupChat format ["%1 %2 %3 %4. %5", localize {TZK_LANG_TOO}, localize {TZK_LANG_FAR}, localize {TZK_LANG_TO}, localize {TZK_LANG_BRIDGE}, localize {TZK_LANG_ORDER_ABORTED}], exit

_onBridge = preprocessFile "Util\Bridge\On.sqf"
_vehicle = vehicle _unit

; force vehicle "ready" before start the script
_counter = 0
_vehicle doMove getPos _vehicle
# ForceReady
	_counter = _counter + 1

	_crews = crew _vehicle, _b = true, {if not (unitReady _x) then {_b = false}} forEach _crews
	? not _b && 2 == _counter % 5: {_x doFollow leader _x} forEach _crews
	? not _b && 19 == _counter % 20: _vehicle groupChat format ["%1 %2 %3 %4. %5 '%6' %7 %8 %9", localize {TZK_LANG_STUCK}, localize {TZK_LANG_IN}, localize {TZK_LANG_CROSS}, localize {TZK_LANG_BRIDGE}, localize {TZK_LANG_ORDER}, localize {STR_SENT_RETURN_TO_FORMATION_2}, localize {TZK_LANG_TO}, localize {TZK_LANG_FREE}, localize {TZK_LANG_ME}]
	~ 0.5

	? call _quitCond: goto "Quit"
	? not _b: goto "ForceReady"

? [getPosASL _vehicle, _bridge1] call _onBridge: goto "OnBridge1"

	_endPoints = _bridge1 call preprocessFile "Util\Bridge\EndPoints.sqf"
	_endPoint = _endPoints select 0
	? [_vehicle, (_endPoints select 1)] call funcDistH < [_vehicle, _endPoint] call funcDistH: _endPoint = _endPoints select 1

	_moveParamCache = [true, true, [_vehicle, _endPoint, 30, 1, false]]
	_moveParamCache exec "Util\MoveVehUsingSetVel.sqs"
	# loopMoveLand
		~ 1
		? call _quitCond: _moveParamCache set [1, false], goto "Quit"
		? _moveParamCache select 0: goto "loopMoveLand"

# OnBridge1
	_vehicle groupChat format ["%1 %2 %3 %4.", localize {TZK_LANG_PREPARE}, localize {TZK_LANG_TO}, localize {TZK_LANG_CROSS}, localize {TZK_LANG_BRIDGE}]
	_vehicle doWatch _pos2
	_endPoints = _bridge2 call preprocessFile "Util\Bridge\EndPoints.sqf"
	_endPoint = _endPoints select 0
	? [_vehicle, (_endPoints select 1)] call funcDistH > [_vehicle, _endPoint] call funcDistH: _endPoint = _endPoints select 1

	_delta = ([_endPoint, getPosASL _vehicle] call funcVectorSub) call preprocessFile "Math\UnitVector.sqf"

	_moveParamCache = [true, true, [_vehicle, _endPoint, 65, 0, true]]
	_moveParamCache exec "Util\MoveVehUsingSetVel.sqs"
	# loopMoveBridge
		~ 1
		? call _quitCond: _moveParamCache set [1, false], goto "Quit"
		? _moveParamCache select 0: goto "loopMoveBridge"
	
	_vehicle groupChat format ["%1 %2.", localize {TZK_LANG_BRIDGE}, localize {TZK_LANG_CROSS}]

; LeaveTheBridge
	_endPoint = [[_delta, 30] call funcVectorScale, getPosASL _vehicle] call funcVectorAdd

	_moveParamCache = [true, true, [_vehicle, _endPoint, 50, 1, false]]
	_moveParamCache exec "Util\MoveVehUsingSetVel.sqs"
	# loopMoveLeave
		~ 1
		? call _quitCond: _moveParamCache set [1, false], goto "Quit"
		? _moveParamCache select 0: goto "loopMoveLeave"

; End Of File
# Quit

	? _msg != "" && _forServer: [_si, format ["%1: %2", _unit, _msg]] exec "Server\Msg\sSvrMsg2Cmd.sqs"
	? _msg != "" && not _forServer: _unit groupChat _msg
	exit