; args: [output status (write only), input status (read only), [vehice, pos, speed (km/h)]]

; this SQS script loops to move vehicle using "setVelocity" command
; on script finished/aborted, the output status will be set to "false"
; if input status is false, current order should be interrupted and halt
; do in-script exit check ONLY for those conditions whose parameters are local
; no other in-script exit check
; it is possible but unnecessary to use only one status variable

_param = _this select 2
_vehicle = _param select 0
_dest = _param select 1
; "speed" uses km/h while "velocity" uses m/s
_maxMps = (_param select 2) / 3.6

? count _dest < 3: _dest set [2, _dest call funcHASL]

; Need to wait all units in vehicle "ready", otherwise vehicle won't keep their direction as expected
; However no available script command to remove "move" status ordered by player directly
; we can only wait in script

_vehicle doWatch _dest

? not (_this select 1): goto "EOF"

_delta = [_dest, getPosASL _vehicle] call funcVectorSub
_delta = [_delta, 1 / (_delta call funcVectorLength)] call funcVectorScale
_vehicle setVectorDir _delta

_inHalfPlane = preprocessFile "Math\InHalfPlane.sqf"

_counter = 0
_outSeaPos = [-500 - random(500), +500 + random(500), 100]
# loop
	_counter = _counter + 1
	_meterPerSec = (abs(speed _vehicle) + 10) / 3.6
	? _maxMps < _meterPerSec: _meterPerSec = _maxMps

	_vehicle doMove _dest
	_pos = getPosASL _vehicle
	_diff = [_dest, _pos] call funcVectorSub
	_diff = [_diff, _meterPerSec / (_diff call funcVectorLength)] call funcVectorScale

	; ForceMove
	_vehicle setVelocity _diff
	; if "_vehicle" is soldier, setVelocity won't work. Use set pos directly instead

	~ 0.2
	_vehicle doWatch _dest

	~ 0.8
	? not (_this select 1): goto "EOF"
	? not alive _vehicle: goto "EOF"
	? [getPosASL _vehicle, _dest, _delta] call _inHalfPlane: goto "Reached"
	? [getPosASL _vehicle, _dest] call funcDistH < 5: goto "Reached"
	goto "loop"

# Reached

# EOF
	_this set [0, false]